{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","./node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-collapse.js","./src/app/_store/category/service.ts","./src/app/_core/tasks.ts","./src/app/_store/category/model.ts","./src/app/_3D/libs/client-editor.ts","./src/app/_store/category/results.model.ts","./src/app/_store/category/index.ts","./src/app/_core/helpers/html-elements.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkR;AACvO;AACmD;AACN;AACwB;AACb;AAClB;AAC9B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACS;AACL;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,mDAAmD;AACpF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,GAAG,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B,EAAE,gBAAgB;AACrF;AACA,mCAAmC,6FAA+B,EAAE,iBAAiB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,iCAAiC;AACjC;AACA,+BAA+B,4CAAO;AACtC;AACA,wCAAwC,iDAAY;AACpD;AACA,sCAAsC,iDAAY;AAClD;AACA,mCAAmC,iDAAY;AAC/C;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA,2BAA2B,4CAAO;AAClC;AACA,4BAA4B,4CAAO;AACnC;AACA,yBAAyB,4CAAO;AAChC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB,GAAG,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2EAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO,GAAG,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4EAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc,MAAM,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAQ,IAAI,4DAAuB;AAC/C,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA,oEAAoE,2BAA2B;AAC/F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,gBAAgB;AACnC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2EAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAAc,CAAC,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B;AACnE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,wDAAQ,GAAG;AAC7J,yBAAyB,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AAChN;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,oDAAa,EAAE,GAAG;AACxD,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,oDAAa,GAAG,sDAAe,CAAC,oEAAoB,GAAG,sDAAe,oBAAoB;AAC/M,iBAAiB,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,oBAAoB,EAAE,uCAAuC;AACrO;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK;AACL;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,oDAAa,EAAE,GAAG,OAAO,oEAAoB,EAAE,GAAG,yBAAyB,EAAE,EAAE,QAAQ,EAAE;;AAEnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,6EAA6E,qDAAqD,6CAA6C,gEAAyB,GAAG,8DAA8D,KAAK;AAChU;AACA,gBAAgB,OAAO,mDAAK,uCAAuC;AACnE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,6BAA6B,8DAA8D;AAC3F,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B,sCAAsC,cAAc;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mFAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,mBAAmB,gEAAS;AAC3D;AACA;AACA;AACA,6BAA6B,yEAAW;AACxC;AACA;AACA;AACA,gGAAgG,KAAK;AACrG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA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AACA,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,yBAAyB,+CAAU;AACnC,0DAA0D,0DAAG;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA,YAAY,0DAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,gEAAS;AACrB,uBAAuB,kDAAK;AAC5B,mDAAmD,gEAAS;AAC5D,iBAAiB;AACjB,aAAa,GAAG,gEAAS;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qCAAqC,kF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","file":"default~item-page-item-module~project-page-project-module~template-page-template-module-es2015.js","sourcesContent":["import { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, ElementRef, ChangeDetectorRef, Optional, SkipSelf, Output, TemplateRef, ViewContainerRef, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @docs-private\n */\nfunction toggleVisibility(element, enable) {\n    const styles = element.style;\n    styles.position = enable ? '' : 'fixed';\n    styles.top = styles.opacity = enable ? '' : '0';\n    styles.left = enable ? '' : '-999em';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = event.target;\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._handles.find(handle => {\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains(target));\n                });\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = this._parentDragRef = null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const preview = this._preview = this._createPreviewElement();\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document, shadowRoot).appendChild(preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && event.target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        });\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n            this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this)\n                });\n            });\n        }\n        this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n        this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event) ?\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n            // throwing an error. The value returned here will be incorrect, but since this only\n            // breaks inside a developer tool and the value is only used for secondary information,\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const previewRect = this._previewRect;\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            x = clamp(x, minX, maxX);\n            y = clamp(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = event.target;\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n            // the `document` specifically since IE doesn't support `contains` on it.\n            if (this._boundaryRect && (target === this._document ||\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef, shadowRoot) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return shadowRoot ||\n        documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp$1(fromIndex, array.length - 1);\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -scrollStep);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, scrollStep);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            const reference = activeDraggables[0].getRootElement();\n            reference.parentNode.insertBefore(placeholder, reference);\n            activeDraggables.unshift(item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        }).sort((a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const index = findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return (index === -1 || !this.sortPredicate(index, item, this)) ? -1 : index;\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect || !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) && items.every(item => {\n            // Note that we have to add an exception to the `enterPredicate` for items that started off\n            // in this drop list. The drag ref has logic that allows an item to return to its initial\n            // container, if it has left the initial container and none of the connected containers\n            // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n            return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n        })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._activeDraggables.filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /** Emits when the viewport has been scrolled while the user is dragging an item. */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }])] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup',\n                providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }]\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` +\n            `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\nconst ɵ0 = undefined;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate =\n            (index, drag, drop) => {\n                return this.sortPredicate(index, drag.data, drop.data);\n            };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: ScrollDispatcher },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DROP_LIST_GROUP,] }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    sortPredicate: [{ type: Input, args: ['cdkDropListSortPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    autoScrollStep: [{ type: Input, args: ['cdkDropListAutoScrollStep',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[attr.id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DROP_LIST_GROUP]\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], sortPredicate: [{\n            type: Input,\n            args: ['cdkDropListSortPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }], autoScrollStep: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollStep']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }])] });\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }, { type: SkipSelf }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                },\n                providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }])] });\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]',\n                providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() { return this._matchSize; }\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }])] });\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]',\n                providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }))).subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((handles) => {\n                const childHandleElements = handles\n                    .filter(handle => handle._parentDrag === this)\n                    .map(handle => handle.element);\n                // Usually handles are only allowed to be a descendant of the drag element, but if\n                // the consumer defined a different drag root, we should allow the drag element\n                // itself to be a handle too.\n                if (this._selfHandle && this.rootElementSelector) {\n                    childHandleElements.push(this.element);\n                }\n                this._dragRef.withHandles(childHandleElements);\n            }), \n            // Listen if the state of any of the handles changes.\n            switchMap((handles) => {\n                return merge(...handles.map(item => {\n                    return item._stateChanges.pipe(startWith(item));\n                }));\n            }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                const dragRef = this._dragRef;\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            });\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        const element = coerceElement(boundary);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            var _a, _b;\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                // `classList` needs to be null checked, because IE doesn't have it on some elements.\n                if ((_a = parent.classList) === null || _a === void 0 ? void 0 : _a.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(((_b = CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })) === null || _b === void 0 ? void 0 : _b._dragRef) || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PREVIEW, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PLACEHOLDER, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_HANDLE, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkDrag._dragInstances = [];\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: CdkDragHandle, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [CDK_DRAG_HANDLE,] }] },\n    { type: CdkDrag, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [CDK_DRAG_PARENT,] }] }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CDK_DRAG_HANDLE, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CDK_DRAG_PREVIEW,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CDK_DRAG_PLACEHOLDER,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': DRAG_HOST_CLASS,\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_HANDLE]\n            }] }, { type: CdkDrag, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }] }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CDK_DRAG_HANDLE, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PREVIEW]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PLACEHOLDER]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element, selector) {\n    let currentElement = element.parentElement;\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            currentElement.msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵfac = function DragDropModule_Factory(t) { return new (t || DragDropModule)(); };\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        DragDrop,\n    ], imports: [CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n\n//# sourceMappingURL=drag-drop.js.map","import { __decorate, __metadata } from 'tslib';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ElementRef, Optional, Input, EventEmitter, Host, Output, NgModule } from '@angular/core';\nimport { collapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc4 from '@angular/common';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc6 from 'ng-zorro-antd/icon';\n\nconst _c0 = [\"*\"];\nfunction NzCollapsePanelComponent_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const expandedIcon_r4 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", expandedIcon_r4 || \"right\")(\"nzRotate\", ctx_r3.nzActive ? 90 : 0);\n} }\nfunction NzCollapsePanelComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzCollapsePanelComponent_ng_container_1_ng_container_1_Template, 2, 2, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r0.nzExpandedIcon);\n} }\nfunction NzCollapsePanelComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.nzHeader);\n} }\nfunction NzCollapsePanelComponent_div_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.nzExtra);\n} }\nfunction NzCollapsePanelComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(1, NzCollapsePanelComponent_div_3_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzExtra);\n} }\nconst NZ_CONFIG_MODULE_NAME = 'collapse';\nclass NzCollapseComponent {\n    constructor(nzConfigService, cdr, elementRef, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzAccordion = false;\n        this.nzBordered = true;\n        this.nzGhost = false;\n        this.nzExpandIconPosition = 'left';\n        this.dir = 'ltr';\n        this.listOfNzCollapsePanelComponent = [];\n        this.destroy$ = new Subject();\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-collapse');\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnInit() {\n        var _a;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n    }\n    addPanel(value) {\n        this.listOfNzCollapsePanelComponent.push(value);\n    }\n    removePanel(value) {\n        this.listOfNzCollapsePanelComponent.splice(this.listOfNzCollapsePanelComponent.indexOf(value), 1);\n    }\n    click(collapse) {\n        if (this.nzAccordion && !collapse.nzActive) {\n            this.listOfNzCollapsePanelComponent\n                .filter(item => item !== collapse)\n                .forEach(item => {\n                if (item.nzActive) {\n                    item.nzActive = false;\n                    item.nzActiveChange.emit(item.nzActive);\n                    item.markForCheck();\n                }\n            });\n        }\n        collapse.nzActive = !collapse.nzActive;\n        collapse.nzActiveChange.emit(collapse.nzActive);\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzCollapseComponent.ɵfac = function NzCollapseComponent_Factory(t) { return new (t || NzCollapseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nNzCollapseComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzCollapseComponent, selectors: [[\"nz-collapse\"]], hostVars: 10, hostBindings: function NzCollapseComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-collapse-icon-position-left\", ctx.nzExpandIconPosition === \"left\")(\"ant-collapse-icon-position-right\", ctx.nzExpandIconPosition === \"right\")(\"ant-collapse-ghost\", ctx.nzGhost)(\"ant-collapse-borderless\", !ctx.nzBordered)(\"ant-collapse-rtl\", ctx.dir === \"rtl\");\n    } }, inputs: { nzAccordion: \"nzAccordion\", nzBordered: \"nzBordered\", nzGhost: \"nzGhost\", nzExpandIconPosition: \"nzExpandIconPosition\" }, exportAs: [\"nzCollapse\"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzCollapseComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nNzCollapseComponent.ctorParameters = () => [\n    { type: NzConfigService },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nNzCollapseComponent.propDecorators = {\n    nzAccordion: [{ type: Input }],\n    nzBordered: [{ type: Input }],\n    nzGhost: [{ type: Input }],\n    nzExpandIconPosition: [{ type: Input }]\n};\n__decorate([\n    WithConfig(),\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzCollapseComponent.prototype, \"nzAccordion\", void 0);\n__decorate([\n    WithConfig(),\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzCollapseComponent.prototype, \"nzBordered\", void 0);\n__decorate([\n    WithConfig(),\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzCollapseComponent.prototype, \"nzGhost\", void 0);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NZ_CONFIG_MODULE_NAME$1 = 'collapsePanel';\nclass NzCollapsePanelComponent {\n    constructor(nzConfigService, cdr, nzCollapseComponent, elementRef, noAnimation) {\n        this.nzConfigService = nzConfigService;\n        this.cdr = cdr;\n        this.nzCollapseComponent = nzCollapseComponent;\n        this.elementRef = elementRef;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME$1;\n        this.nzActive = false;\n        this.nzDisabled = false;\n        this.nzShowArrow = true;\n        this.nzActiveChange = new EventEmitter();\n        this.destroy$ = new Subject();\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-collapse-item');\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_MODULE_NAME$1)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.cdr.markForCheck();\n        });\n    }\n    clickHeader() {\n        if (!this.nzDisabled) {\n            this.nzCollapseComponent.click(this);\n        }\n    }\n    markForCheck() {\n        this.cdr.markForCheck();\n    }\n    ngOnInit() {\n        this.nzCollapseComponent.addPanel(this);\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.nzCollapseComponent.removePanel(this);\n    }\n}\nNzCollapsePanelComponent.ɵfac = function NzCollapsePanelComponent_Factory(t) { return new (t || NzCollapsePanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NzCollapseComponent, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NzNoAnimationDirective, 8)); };\nNzCollapsePanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzCollapsePanelComponent, selectors: [[\"nz-collapse-panel\"]], hostVars: 6, hostBindings: function NzCollapsePanelComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-collapse-no-arrow\", !ctx.nzShowArrow)(\"ant-collapse-item-active\", ctx.nzActive)(\"ant-collapse-item-disabled\", ctx.nzDisabled);\n    } }, inputs: { nzActive: \"nzActive\", nzDisabled: \"nzDisabled\", nzShowArrow: \"nzShowArrow\", nzExtra: \"nzExtra\", nzHeader: \"nzHeader\", nzExpandedIcon: \"nzExpandedIcon\" }, outputs: { nzActiveChange: \"nzActiveChange\" }, exportAs: [\"nzCollapsePanel\"], ngContentSelectors: _c0, decls: 7, vars: 8, consts: [[\"role\", \"tab\", 1, \"ant-collapse-header\", 3, \"click\"], [4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"class\", \"ant-collapse-extra\", 4, \"ngIf\"], [1, \"ant-collapse-content\"], [1, \"ant-collapse-content-box\"], [\"nz-icon\", \"\", 1, \"ant-collapse-arrow\", 3, \"nzType\", \"nzRotate\"], [1, \"ant-collapse-extra\"]], template: function NzCollapsePanelComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NzCollapsePanelComponent_Template_div_click_0_listener() { return ctx.clickHeader(); });\n        ɵngcc0.ɵɵtemplate(1, NzCollapsePanelComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(2, NzCollapsePanelComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(3, NzCollapsePanelComponent_div_3_Template, 2, 1, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.nzActive);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowArrow);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.nzHeader);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzExtra);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"ant-collapse-content-active\", ctx.nzActive);\n        ɵngcc0.ɵɵproperty(\"@.disabled\", ctx.noAnimation == null ? null : ctx.noAnimation.nzNoAnimation)(\"@collapseMotion\", ctx.nzActive ? \"expanded\" : \"hidden\");\n    } }, directives: [ɵngcc4.NgIf, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc6.NzIconDirective], encapsulation: 2, data: { animation: [collapseMotion] }, changeDetection: 0 });\nNzCollapsePanelComponent.ctorParameters = () => [\n    { type: NzConfigService },\n    { type: ChangeDetectorRef },\n    { type: NzCollapseComponent, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: NzNoAnimationDirective, decorators: [{ type: Optional }] }\n];\nNzCollapsePanelComponent.propDecorators = {\n    nzActive: [{ type: Input }],\n    nzDisabled: [{ type: Input }],\n    nzShowArrow: [{ type: Input }],\n    nzExtra: [{ type: Input }],\n    nzHeader: [{ type: Input }],\n    nzExpandedIcon: [{ type: Input }],\n    nzActiveChange: [{ type: Output }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzCollapsePanelComponent.prototype, \"nzActive\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzCollapsePanelComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    WithConfig(),\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzCollapsePanelComponent.prototype, \"nzShowArrow\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCollapseComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-collapse',\n                exportAs: 'nzCollapse',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <ng-content></ng-content>\n  `,\n                host: {\n                    '[class.ant-collapse-icon-position-left]': `nzExpandIconPosition === 'left'`,\n                    '[class.ant-collapse-icon-position-right]': `nzExpandIconPosition === 'right'`,\n                    '[class.ant-collapse-ghost]': `nzGhost`,\n                    '[class.ant-collapse-borderless]': '!nzBordered',\n                    '[class.ant-collapse-rtl]': \"dir === 'rtl'\"\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.NzConfigService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { nzAccordion: [{\n            type: Input\n        }], nzBordered: [{\n            type: Input\n        }], nzGhost: [{\n            type: Input\n        }], nzExpandIconPosition: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCollapsePanelComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-collapse-panel',\n                exportAs: 'nzCollapsePanel',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                animations: [collapseMotion],\n                template: `\n    <div role=\"tab\" [attr.aria-expanded]=\"nzActive\" class=\"ant-collapse-header\" (click)=\"clickHeader()\">\n      <ng-container *ngIf=\"nzShowArrow\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; let expandedIcon\">\n          <i nz-icon [nzType]=\"expandedIcon || 'right'\" class=\"ant-collapse-arrow\" [nzRotate]=\"nzActive ? 90 : 0\"></i>\n        </ng-container>\n      </ng-container>\n      <ng-container *nzStringTemplateOutlet=\"nzHeader\">{{ nzHeader }}</ng-container>\n      <div class=\"ant-collapse-extra\" *ngIf=\"nzExtra\">\n        <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n      </div>\n    </div>\n    <div\n      class=\"ant-collapse-content\"\n      [class.ant-collapse-content-active]=\"nzActive\"\n      [@.disabled]=\"noAnimation?.nzNoAnimation\"\n      [@collapseMotion]=\"nzActive ? 'expanded' : 'hidden'\"\n    >\n      <div class=\"ant-collapse-content-box\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n                host: {\n                    '[class.ant-collapse-no-arrow]': '!nzShowArrow',\n                    '[class.ant-collapse-item-active]': 'nzActive',\n                    '[class.ant-collapse-item-disabled]': 'nzDisabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.NzConfigService }, { type: ɵngcc0.ChangeDetectorRef }, { type: NzCollapseComponent, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.NzNoAnimationDirective, decorators: [{\n                type: Optional\n            }] }]; }, { nzActive: [{\n            type: Input\n        }], nzDisabled: [{\n            type: Input\n        }], nzShowArrow: [{\n            type: Input\n        }], nzActiveChange: [{\n            type: Output\n        }], nzExtra: [{\n            type: Input\n        }], nzHeader: [{\n            type: Input\n        }], nzExpandedIcon: [{\n            type: Input\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzCollapseModule {\n}\nNzCollapseModule.ɵfac = function NzCollapseModule_Factory(t) { return new (t || NzCollapseModule)(); };\nNzCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzCollapseModule });\nNzCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule, CommonModule, NzIconModule, NzOutletModule, NzNoAnimationModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzCollapseModule, { declarations: function () { return [NzCollapsePanelComponent, NzCollapseComponent]; }, imports: function () { return [BidiModule, CommonModule, NzIconModule, NzOutletModule, NzNoAnimationModule]; }, exports: function () { return [NzCollapsePanelComponent, NzCollapseComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzCollapseModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NzCollapsePanelComponent, NzCollapseComponent],\n                exports: [NzCollapsePanelComponent, NzCollapseComponent],\n                imports: [BidiModule, CommonModule, NzIconModule, NzOutletModule, NzNoAnimationModule]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzCollapseComponent, NzCollapseModule, NzCollapsePanelComponent };\n\n//# sourceMappingURL=ng-zorro-antd-collapse.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@app/_core/services/http.service';\r\nimport { Observable } from 'rxjs';\r\n// import { RestService } from '../../../_core/services/rest.service';\r\n\r\nimport { CategoryModel } from './model';\r\nimport { CategoryResultModel, CategoryResultsModel } from './results.model';\r\n// import { CategoryResultsModel, CategoryResultModel } from './results.model';\r\n\r\nconst API_CUSTOMERS_URL = 'categories';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n  results: CategoryResultsModel;\r\n\r\n  constructor(private httpService: HttpService) { }\r\n\r\n\r\n\r\n  getAll(params: {}): Observable<CategoryResultsModel> {\r\n    return this.httpService.get(API_CUSTOMERS_URL + \"/list\", params);\r\n  }\r\n\r\n  // get(key): Observable<CategoryResultModel> {\r\n  //   return this.httpService.get(`${API_CUSTOMERS_URL}/${key}.json`);\r\n  // }\r\n\r\n  get(key): Observable<CategoryModel> {\r\n    return this.httpService.get(`${API_CUSTOMERS_URL}/${key}`);\r\n  }\r\n\r\n  create(model: CategoryModel): Observable<CategoryResultModel> {\r\n    return this.httpService.post(API_CUSTOMERS_URL + \"/create\", model);\r\n  }\r\n\r\n  update(model: CategoryModel): Observable<CategoryResultModel> {\r\n    const key = model.id;\r\n    // return this.httpService.patch(`${API_CUSTOMERS_URL}/${key}.json`, model);\r\n    return this.httpService.patch(`${API_CUSTOMERS_URL}/update`, model);\r\n  }\r\n\r\n\r\n  delete(key): Observable<CategoryResultModel> {\r\n    return this.httpService.delete(`${API_CUSTOMERS_URL}/${key}`);\r\n    // return this.httpService.delete(`${API_CUSTOMERS_URL}/actions.json`);\r\n  }\r\n\r\n  search(query: { tag?: string; key?: string; collectionCode?: string }) {\r\n    return this.httpService.get(`${API_CUSTOMERS_URL}/list`, query);\r\n  }\r\n\r\n  searchNounProject(query: { tag?: string; key?: string; collectionCode?: string }) {\r\n    return this.httpService.get(`${API_CUSTOMERS_URL}/search/nounproject`, query);\r\n  }\r\n\r\n  render(params) {\r\n    return this.httpService.download(API_CUSTOMERS_URL + `/render`, params);\r\n  }\r\n\r\n  getCategoryData(url) {\r\n    return this.httpService.getOut(url);\r\n  }\r\n\r\n  useCategory(CategoryId): Observable<CategoryResultModel> {\r\n    return this.httpService.post(`${API_CUSTOMERS_URL}/${CategoryId}/use`, {}, false);\r\n  }\r\n}\r\n","import { isCallable, isObject, objectHasKey, Str, inArray, isArray } from \"./helpers/utils\";\r\nconst NO_VALUE = Str.rand();\r\nexport interface __3DHubTaskManager__{\r\n    tasks: {\r\n        [task:string]: CallableFunction[]\r\n    }\r\n    add(task: string, callable: CallableFunction): boolean\r\n    has(task: string, callable?: CallableFunction): boolean\r\n    remove(task: string, callable?: CallableFunction): boolean\r\n    run(task: string, args?: any[]): any\r\n    \r\n}\r\nexport const __3DHubTaskManager__: __3DHubTaskManager__ = typeof window['__3DHubTaskManager__'] != \"undefined\" && isObject(window['__3DHubTaskManager__']) ? window['__3DHubTaskManager__'] : {\r\n    tasks: {},\r\n    add: function(task, callable){\r\n        if(!objectHasKey(this.tasks, task)) this.tasks[task] = [];\r\n        return isCallable(callable) && this.tasks[task].push(callable)? true: false;\r\n    },\r\n    has: function(task, callable?:CallableFunction){\r\n        if(!objectHasKey(this.tasks, task)) return false;\r\n        if(!this.tasks[task].length) return false;\r\n        if(callable) return this.tasks[task].indexOf(callable) != -1;\r\n        return  true;\r\n    },\r\n    remove: function(task, callable?:CallableFunction){\r\n        if(!objectHasKey(this.tasks, task)) return false;\r\n        if(!this.tasks[task].length) return false;\r\n        if(callable){\r\n            let i = this.tasks[task].indexOf(callable);\r\n            if(i!=-1){\r\n                this.tasks[task].splice(callable, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        this.tasks[task].splice(0);\r\n        delete this.tasks[task];\r\n        return  true;\r\n    },\r\n    run: function(task, args?:any[]){\r\n        if(!objectHasKey(this.tasks, task)) return false;\r\n        if(!this.tasks[task].length) return false;\r\n        let a = args && isArray(args) ? args: []\r\n        if(this.tasks[task].length == 1){\r\n            return isCallable( this.tasks[task][0])? this.tasks[task][0](...a):null;\r\n        }\r\n        let r:any[] = [];\r\n        for (let index = 0; index < this.tasks[task].length; index++) {\r\n            const callable = this.tasks[task][index];\r\n            if(isCallable(callable)){\r\n                r.push(callable(...a));\r\n            }\r\n        }\r\n        return  r;\r\n    }\r\n}\r\n\r\nexport const getTaskManager: () => __3DHubTaskManager__ = () => __3DHubTaskManager__;\r\nexport const addTask = (task: string, callable: CallableFunction) => __3DHubTaskManager__.add(task, callable);\r\nexport const removeTask = (task: string, callable?: CallableFunction) => __3DHubTaskManager__.remove(task, callable);\r\nexport const hasTask = (task: string, callable?: CallableFunction) => __3DHubTaskManager__.has(task, callable);\r\nexport const runTask = (task: string, args?:any[]) => __3DHubTaskManager__.run(task, args);\r\n","import { ItemModel } from \"../item\";\r\nimport { ProjectModel } from \"../project\";\r\nimport { TemplateModel } from \"../template\";\r\n\r\nexport enum ECategoryStatus {\r\n    draft = 'draft',\r\n    published = 'published',\r\n}\r\nexport interface CategoryModel {\r\n    id: number,\r\n    name: string,\r\n    status?: string, \r\n    description?: string,\r\n    itemCount?: number,\r\n    items?:ItemModel[],\r\n    projects?:ProjectModel[],\r\n    templates?:TemplateModel[]\r\n    \r\n}\r\n","import { assignValue, assignWithout, getTimeStamp, inArray, isArray, isEmpty, isNumber, isObject, isString, newObj, objectValues, Str } from '@app/_core/helpers/utils';\r\nimport * as THREE from 'three';\r\nimport { _class } from '@app/_core/helpers/es5.class';\r\nimport { SceneSize, Vector2 } from '../store/data.type';\r\nimport { EditorClass, iEditor } from '../store/docs';\r\nimport Editor from './editor';\r\nimport { Div, i, Span } from '@app/_core/helpers/html-elements';\r\n\r\n\r\nconst Editor__: any = _class(\"ClientEditor\").extends(Editor)({\r\n    transformMode: \"basic\",\r\n    hasSelectedObject: false,\r\n    posInfo: null,\r\n    constructor: function constructor(app, engine: any) {\r\n        this.setup(app, engine);\r\n    },\r\n    startup: function () {\r\n        var scope: iEditor = this;\r\n\r\n        this.on('pointerdown', onPointerDown);\r\n        this.on('pointerup', onPointerUp);\r\n        this.on('pointermove', onPointerMove);\r\n\r\n\r\n        (function () {\r\n\r\n            window.addEventListener('keydown', function (event) {\r\n\r\n                switch (event.keyCode) {\r\n                    case 81: // Q\r\n                        scope.executeCommand(\"space\");\r\n                        break;\r\n                    case 16: // Shift\r\n                        scope.executeCommand(\"snap\");\r\n                        break;\r\n                    case 46: // delete\r\n                        scope.deleteAttach();\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }());\r\n\r\n        function onPointerDown(event) {\r\n\r\n            scope.poiterDowsStatus = true;\r\n            var rect = scope.engine.wrapper.getBoundingClientRect();\r\n\r\n            scope.onDownPosition.x = event.clientX - rect.left;\r\n            scope.onDownPosition.y = event.clientY - rect.top;\r\n            //\r\n            // console.log(\"point down\");\r\n            if (!scope.selected || scope.transformMode != \"basic\" || scope.selected.isLight || (scope.currentTargetControl && scope.currentTargetControl == scope.control.object)) {\r\n                scope.app.canTransferEventToControls = true;\r\n                return;\r\n            }\r\n\r\n            const pointer = new THREE.Vector2();\r\n            pointer.x = (scope.onDownPosition.x / rect.width) * 2 - 1;\r\n            pointer.y = - (scope.onDownPosition.y / rect.height) * 2 + 1;\r\n            const detectObj = scope.selectObjectByPointer(pointer);\r\n            if (detectObj && detectObj == scope.selected && !detectObj.isLight) {\r\n                event.preventDefault();\r\n                scope.engine.control.enabled = false;\r\n                scope.control.enabled = false;\r\n                scope.hasSelectedObject = true;\r\n                scope.setObjectMovable(scope.selected);\r\n                scope.app.canTransferEventToControls = false;\r\n                // console.log(\"has obj\");\r\n            } else {\r\n                scope.engine.control.enabled = true;\r\n                scope.control.enabled = true;\r\n                scope.hasSelectedObject = false;\r\n                // scope.app.canTransferEventToControls = true;\r\n                // console.log(\"no obj\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        function onPointerUp(event) {\r\n            scope.app.canTransferEventToControls = true;\r\n            if (scope.poiterDowsStatus) {\r\n                if (scope.hasSelectedObject) {\r\n                    this.emit({\r\n                        type: \"object.changed\",\r\n                        data: scope.selected,\r\n                        mode: \"translate\"\r\n                    })\r\n                    scope.engine.control.enabled = true;\r\n                    scope.control.enabled = true;\r\n                    scope.hasSelectedObject = false;\r\n                    // do somehing\r\n                    scope.removeObjectMovable();\r\n\r\n                    scope.poiterDowsStatus = false;\r\n                    return;\r\n                }\r\n\r\n                var rect = scope.engine.wrapper.getBoundingClientRect();\r\n                scope.onUpPosition.x = event.clientX - rect.left;\r\n                scope.onUpPosition.y = event.clientY - rect.top;\r\n                // console.log(scope.onUpPosition.x, scope.onUpPosition.y)\r\n                if (scope.onUpPosition.x < 0 || scope.onUpPosition.y < 0) {\r\n                    // scope.app.canTransferEventToControls = true;\r\n                    // console.log(\"out wp\");\r\n                    return;\r\n                }\r\n\r\n                if (scope.onDownPosition.distanceTo(scope.onUpPosition) === 0) {\r\n                    scope.pointer.x = (scope.onUpPosition.x / rect.width) * 2 - 1;\r\n                    scope.pointer.y = - (scope.onUpPosition.y / rect.height) * 2 + 1;\r\n                    scope.setCurrentObjectByPointer(scope.pointer);\r\n                    // console.log(\"check current\");\r\n\r\n                } else {\r\n                    // scope.app.canTransferEventToControls = true;\r\n                }\r\n            }\r\n            // else if (scope.hasSelectedObject) {\r\n            //     scope.engine.control.enabled = true;\r\n            //     scope.control.enabled = true;\r\n            //     scope.hasSelectedObject = false;\r\n            //     // do somehing\r\n            //     scope.removeObjectMovable();\r\n            //     setTimeout(function(){\r\n            //         scope.app.canTransferEventToControls = true;\r\n            //     }, 1);\r\n            //     return;\r\n            // }\r\n            else {\r\n                // scope.app.canTransferEventToControls = true;\r\n                // console.log(\"nm\");\r\n            }\r\n            scope.poiterDowsStatus = false;\r\n\r\n        }\r\n\r\n        function onPointerMove(event) {\r\n            if (scope.poiterDowsStatus) {\r\n                // scope.turnOffShadow();\r\n\r\n            }\r\n            if (scope.hasSelectedObject) {\r\n                // var rect = scope.engine.wrapper.getBoundingClientRect();\r\n                const pointer = new THREE.Vector2();\r\n                pointer.x = event.clientX;\r\n                pointer.y = event.clientY;\r\n                // scope.app.canTransferEventToControls = false;\r\n                scope.checkObjectMovablePosition(pointer);\r\n                return;\r\n            }\r\n        }\r\n        this.ready();\r\n        this.setEngineData();\r\n        this.emit({\r\n            type: \"startup\",\r\n            data: getTimeStamp()\r\n        });\r\n        this.posInfo = Div(\"#\" + this.getInstanceID(), {\r\n            style: {\r\n                display: 'none',\r\n                position: \"absolute\",\r\n                opacity: 0,\r\n                zIndex: 1000,\r\n                width: \"120px\"\r\n            },\r\n            setPos: function (...args: any[]) {\r\n                if (args.length >= 3) {\r\n                    this.callChildren(\"setX\", [args[0]]);\r\n                    this.callChildren(\"setY\", [args[1]]);\r\n                    this.callChildren(\"setZ\", [args[2]]);\r\n                } else if (args.length >= 1) {\r\n                    if (isObject(args[0])) {\r\n                        if (typeof args[0].x != \"undefined\") this.callChildren(\"setX\", [args[0].x]);\r\n                        if (typeof args[0].y != \"undefined\") this.callChildren(\"setY\", [args[0].y]);\r\n                        if (typeof args[0].z != \"undefined\") this.callChildren(\"setZ\", [args[0].z]);\r\n\r\n                    }\r\n\r\n                }\r\n            },\r\n            children: [\r\n                Div(\".x\", [\r\n                    Span(\".label\", \"x\"), Span(\".space\", \" \"), Span(\".value\", {\r\n                        setX: function (x) {\r\n                            this.html(x);\r\n                        }\r\n                    })\r\n                ]),\r\n                Div(\".y\", [\r\n                    Span(\".label\", \"y\"), Span(\".space\", \" \"), Span(\".value\", {\r\n                        setY: function (x) {\r\n                            this.html(x);\r\n                        }\r\n                    })\r\n                ]),\r\n                Div(\".z\", [\r\n                    Span(\".label\", \"z\"), Span(\".space\", \" \"), Span(\".value\", {\r\n                        setZ: function (x) {\r\n                            this.html(x);\r\n                        }\r\n                    })\r\n                ])\r\n            ]\r\n        });\r\n\r\n        document.body.appendChild(this.posInfo.el);\r\n\r\n    },\r\n\r\n\r\n    updateDropAreaAreas: function (sceneSize: SceneSize, floorPositionY: number, addItemAboveFloor?: boolean) {\r\n        var self = this;\r\n        assignValue(this.sceneSize, sceneSize);\r\n        // this.checkMovingEngine();\r\n        if (this.areaObjects.length) {\r\n            this.areaObjects.map(function (o) {\r\n                self.moving.remove(o);\r\n                // self.scene.remove(o);\r\n            });\r\n        }\r\n        var xStart = -sceneSize.width / 2, xEnd = sceneSize.width / 2,\r\n            zStart = -sceneSize.depth / 2, zEnd = sceneSize.depth / 2;\r\n        let colRow = this.dragMoveColRows;\r\n        var areaWidth = sceneSize.width / colRow;\r\n        var areaDepth = sceneSize.depth / colRow;\r\n        var areaHeight = (areaDepth < areaWidth ? areaDepth : areaWidth) / 5;\r\n\r\n\r\n        xStart += (areaWidth / 2);\r\n        xEnd -= (areaWidth / 2);\r\n        zStart += (areaDepth / 2);\r\n        zEnd -= (areaDepth / 2);\r\n\r\n        var y = (addItemAboveFloor && isNumber(floorPositionY) ? floorPositionY : 0);\r\n        this.dropPosY = y;\r\n\r\n        let boxOrigin = this.engine.Mesh.get({\r\n            geometry: { type: \"box\", width: areaWidth, height: areaHeight, depth: areaDepth },\r\n            material: { type: \"basic\", params: { opacity: 0 }, props: { transparent: true, visible: false } },\r\n            props: { visible: false }\r\n        });\r\n        let xC = 0;\r\n        let zC = 0;\r\n\r\n        while (xC <= xEnd) {\r\n            // if (i > 10000) break;\r\n            // i++;\r\n            let zz = zC;\r\n            while (zz <= zEnd) {\r\n                // if (j > 10000) break;\r\n                // j++;\r\n                let box = boxOrigin.clone(true);\r\n                box.position.x = xC;\r\n                box.position.y = y;\r\n                box.position.z = zz;\r\n\r\n                this.areaObjects.push(box);\r\n\r\n                zz += areaDepth;\r\n            }\r\n            xC += areaWidth;\r\n        }\r\n\r\n        xC = -areaWidth;\r\n        zC = 0;\r\n\r\n        while (xC >= xStart) {\r\n            let zz = zC;\r\n            while (zz <= zEnd) {\r\n                // if (j > 10000) break;\r\n                // j++;\r\n                let box = boxOrigin.clone(true);\r\n                box.position.x = xC;\r\n                box.position.y = y;\r\n                box.position.z = zz;\r\n\r\n                this.areaObjects.push(box);\r\n\r\n                zz += areaDepth;\r\n            }\r\n            xC -= areaWidth;\r\n        }\r\n\r\n\r\n        xC = 0;\r\n        zC = -areaDepth;\r\n\r\n        while (xC <= xEnd) {\r\n            let zz = zC;\r\n            while (zz >= zStart) {\r\n                // if (j > 10000) break;\r\n                // j++;\r\n                let box = boxOrigin.clone(true);\r\n                box.position.x = xC;\r\n                box.position.y = y;\r\n                box.position.z = zz;\r\n\r\n                this.areaObjects.push(box);\r\n\r\n                zz -= areaDepth;\r\n            }\r\n            xC += areaWidth;\r\n        }\r\n\r\n\r\n        xC = -areaWidth;\r\n        zC = -areaDepth;\r\n\r\n        while (xC >= xStart) {\r\n            let zz = zC;\r\n            while (zz >= zStart) {\r\n                // if (j > 10000) break;\r\n                // j++;\r\n                let box = boxOrigin.clone(true);\r\n                box.position.x = xC;\r\n                box.position.y = y;\r\n                box.position.z = zz;\r\n\r\n                this.areaObjects.push(box);\r\n\r\n                zz -= areaDepth;\r\n            }\r\n            xC -= areaWidth;\r\n        }\r\n\r\n        // var self = this;\r\n        this.areaObjects.map(function (b) {\r\n            self.moving.add(b);\r\n            // self.scene.add(b);\r\n        });\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n    setObjectMovable: function (item, itemPosition?: Vector2) {\r\n        this.hasDroppablePosition = true;\r\n        var box = new THREE.Box3().setFromObject(item);\r\n        // box.getCenter(obj.position); // this re-sets the mesh position\r\n        const dimensions = new THREE.Vector3();\r\n        var size: any = box.getSize(dimensions);\r\n        this.itemSize = size;\r\n\r\n        this.dropPreviewCustomObject = true;\r\n        this.itemShadowObject = item;\r\n\r\n\r\n        this.areaObjects.map(function (area) {\r\n            area.position.y = item.position.y;\r\n        });\r\n\r\n        // this.moving.checkCamera();\r\n        this.turnOffShadow(1000);\r\n        // this.refresh();\r\n        if (itemPosition) {\r\n            this.checkObjectMovablePosition(itemPosition);\r\n        }\r\n\r\n    },\r\n    removeObjectMovable: function () {\r\n        if (!this.hasDroppablePosition) return false;\r\n        this.itemShadowObject = null;\r\n        this.hasDroppablePosition = false;\r\n\r\n        var y = this.dropPosY;\r\n        this.areaObjects.map(function (area) {\r\n            area.position.y = y;\r\n        });\r\n\r\n    },\r\n\r\n    checkObjectMovablePosition: function (pointer: Vector2) {\r\n        var scope = this;\r\n        if (!this.hasDroppablePosition) return false;\r\n        // scope.poiterDowsStatus = false;\r\n        var rect = scope.engine.wrapper.getBoundingClientRect();\r\n        var x = pointer.x - rect.left;\r\n        var y = pointer.y - rect.top;\r\n        // console.log(\"check\", x, y)\r\n        if (x < 0 || y < 0) return;\r\n\r\n        pointer.x = (x / rect.width) * 2 - 1;\r\n        pointer.y = - (y / rect.height) * 2 + 1;\r\n\r\n        this.movingRaycaster.setFromCamera(pointer, this.engine.camera);\r\n\r\n\r\n        const intersects = this.movingRaycaster.intersectObjects(this.areaObjects, true);\r\n        // objects\r\n        if (intersects.length > 0) {\r\n            const object = intersects[0].object;\r\n            const obj = this.closestAreaScene(object);\r\n            if (obj) {\r\n                if (this.itemShadowObject) {\r\n                    let o = {\r\n                        x: this.itemShadowObject.position.x,\r\n                        z: this.itemShadowObject.position.z\r\n                    }, n = {\r\n                        x: obj.position.x,\r\n                        z: obj.position.z\r\n                    };\r\n                    var a = o.x != n.x || o.z != n.z;\r\n                    var b = n.x >= -(this.sceneSize.width - this.itemSize.x) / 2 && n.x <= (this.sceneSize.width - this.itemSize.x) / 2;\r\n                    var c = n.z >= -(this.sceneSize.depth - this.itemSize.z) / 2 && n.z <= (this.sceneSize.depth - this.itemSize.z) / 2;\r\n\r\n                    if (a && b && c) {\r\n                        let pos = {\r\n                            x: n.x,\r\n                            y: this.itemShadowObject.position.y,\r\n                            z: n.z\r\n                        }\r\n                        this.posInfo.css({\r\n                            display: \"block\",\r\n                            opacity: 1,\r\n                            top: pointer.y + 20 + \"px\",\r\n                            left: pointer.x + 20 + \"px\"\r\n                        });\r\n                        this.posInfo.setPos(pos);\r\n                        assignValue(this.itemShadowObject.position, n);\r\n                        this.emit({\r\n                            type: \"object.position.move\",\r\n                            position: pos\r\n                        });\r\n                        scope.updateHelperByObject(this.itemShadowObject);\r\n\r\n                        this.turnOffShadow(1000);\r\n                        this.refresh();\r\n\r\n                    }\r\n                    else {\r\n                        this.posInfo.css({\r\n                            display: \"none\"\r\n                        });\r\n\r\n                    }\r\n                } else {\r\n                    this.posInfo.css({\r\n                        display: \"none\"\r\n                    });\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                this.turnOffShadow(1000);\r\n                this.refresh();\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n            this.posInfo.css({\r\n                display: \"none\"\r\n            });\r\n\r\n        }\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    updateHelperByObject: function (object: any) {\r\n        var scope = this;\r\n        if (object !== undefined) {\r\n            var helper = scope.helpers[object.id];\r\n\r\n            if (helper !== undefined && helper.isSkeletonHelper !== true) {\r\n                if (object.position) helper.position.copy(object.position);\r\n                if (object.rotation) helper.rotation.copy(object.rotation);\r\n                if (object.scale) helper.scale.copy(object.scale);\r\n                helper.update();\r\n\r\n            }\r\n\r\n            // signals.refreshSidebarObject3D.dispatch(object);\r\n            // scope.engine.refresh();\r\n        }\r\n    },\r\n    addObject: function (object: any) {\r\n        this.objects.push(object);\r\n        this.setCurrentObject(object);\r\n    },\r\n\r\n\r\n    addLight: function addLight(light: any) {\r\n        if (isObject(light) && light.isLight) {\r\n            var helper = this.getHelper(light);\r\n            if (helper) {\r\n                helper.position.copy(light.position);\r\n                this.scene.add(helper);\r\n                helper.visible = false;\r\n                if (helper.children) {\r\n                    for (let index = 0; index < helper.children.length; index++) {\r\n                        const child = helper.children[index];\r\n                        const i = this.pickers.indexOf(child);\r\n                        if (i == -1) {\r\n                            this.pickers.push(child);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (light.target) {\r\n                light.target.position.y = this.engine.dropbyPositionY;\r\n                this.scene.add(light.target);\r\n            }\r\n            this.lights.push(light);\r\n            // this.setCurrentLight(light);\r\n        }\r\n    },\r\n\r\n    setCurrent: function (object: any) {\r\n        if (!object) {\r\n\r\n            if (this.selected) {\r\n                if (this.selected.isTargetControlObject) {\r\n                    this.detactLightTargetControl();\r\n\r\n                } else if (this.currentLightt) {\r\n                    this.unsetCurrentLight();\r\n\r\n                } else {\r\n                    this.unsetCurrentObject();\r\n                }\r\n            }\r\n            // else {\r\n            this.control.detach();\r\n            // }\r\n            // this.selected = null;\r\n            this.engine.refresh();\r\n            return this;\r\n        }\r\n        if (this.selected === object) return;\r\n        var uuid = null;\r\n\r\n        uuid = object.uuid;\r\n\r\n        this.selected = object;\r\n\r\n        if (!object.isLight) {\r\n            this.setCurrentObject(object);\r\n        }\r\n        else {\r\n            this.setCurrentLight(object);\r\n        }\r\n\r\n        // this.config.setKey( 'selected', uuid );\r\n        // this.signals.objectSelected.dispatch( object );\r\n        this.engine.refresh();\r\n    },\r\n    setCurrentObject: function (object3D: any) {\r\n        if (this.currentLight) {\r\n            this.unsetCurrentLight();\r\n        }\r\n        if (this.currentObject) {\r\n            this.unsetCurrentObject();\r\n        }\r\n        this.currentObject = object3D;\r\n        this.selected = object3D;\r\n\r\n        var helper = this.getHelper(object3D);\r\n\r\n        this.helper = helper;\r\n        // this.control.attach(object3D);\r\n\r\n        this.scene.remove(helper);\r\n        this.scene.add(helper);\r\n\r\n        this.dispatchEvent({\r\n            type: 'object.set-current',\r\n            object: object3D,\r\n            mode: this.transformMode\r\n        });\r\n        this.engine.refresh();\r\n        return false;\r\n\r\n\r\n    },\r\n\r\n    setCurrentLight: function (light: any) {\r\n        if (!light) {\r\n            console.warn(\"Lỗi kkho có ligh\");\r\n            return;\r\n        }\r\n        if (this.currentLight) {\r\n            this.unsetCurrentLight();\r\n        }\r\n        if (this.currentObject) {\r\n            this.unsetCurrentObject();\r\n        }\r\n        this.currentLight = light;\r\n        this.control.detach();\r\n        this.control.attach(light);\r\n        this.selected = light;\r\n        if (!light.targetControlObject) {\r\n            var targetControl = this.getLightTargetControlObject(light);\r\n            if (targetControl) {\r\n                light.targetControlObject = targetControl;\r\n\r\n                this.scene.remove(targetControl);\r\n                this.scene.add(targetControl);\r\n\r\n            }\r\n\r\n        }\r\n        this.dispatchEvent({\r\n            type: 'light.set-current',\r\n            light: light,\r\n            mode: this.control.mode\r\n        });\r\n\r\n    },\r\n\r\n\r\n\r\n    unsetCurrentLight: function () {\r\n        this.detachLight();\r\n        this.dispatchEvent({\r\n            type: 'light.unset-current',\r\n            mode: this.control.mode\r\n        });\r\n    },\r\n    unsetCurrentObject: function () {\r\n        this.detachObject();\r\n        this.dispatchEvent({\r\n            type: 'object.unset-current',\r\n            mode: this.control.mode\r\n        });\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * chọn object\r\n     * @param {Vector3} pointer diểm click\r\n     * @returns \r\n     */\r\n    selectObjectByPointer: function (pointer: any) {\r\n        var scope = this;\r\n        this.raycaster.setFromCamera(pointer, this.engine.camera);\r\n\r\n        /**\r\n         * thứ tự ưu tiên\r\n         * 1 object\r\n         * 2 target\r\n         * 3 light\r\n         */\r\n\r\n\r\n\r\n        const intersects = this.raycaster.intersectObjects(this.objects, true);\r\n        // objects\r\n\r\n        if (intersects.length > 0) {\r\n            const object = intersects[0].object;\r\n            const obj = this.closestObjectInScene(object);\r\n            if (obj) {\r\n\r\n                return obj;\r\n            }\r\n\r\n\r\n        }\r\n        const targetIntersects = this.raycaster.intersectObjects(this.targets, true);\r\n        if (targetIntersects.length) {\r\n            const target = this.closestLightTargetControlInScene(targetIntersects[0].object);\r\n            if (target) {\r\n                // this.attachLightTargetControl(target);\r\n                return target;\r\n            }\r\n        }\r\n\r\n\r\n        // ligjy\r\n        const lightIntersects = this.raycaster.intersectObjects(this.lights, true);\r\n\r\n        if (lightIntersects.length > 0) {\r\n            const object = lightIntersects[0].object;\r\n            const light = this.closestLightInScene(object);\r\n\r\n            if (light) {\r\n\r\n                return light;\r\n\r\n            }\r\n        }\r\n        const pickerIntersects = this.raycaster.intersectObjects(this.pickers, true);\r\n        if (pickerIntersects.length > 0) {\r\n            const object = pickerIntersects[0].object;\r\n            const light = this.closestLightInScene(object);\r\n\r\n            if (light) {\r\n                return light;\r\n            }\r\n\r\n        }\r\n        return null;\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * chọn object\r\n     * @param {Vector3} pointer diểm click\r\n     * @returns \r\n     */\r\n    setCurrentObjectByPointer: function (pointer: any) {\r\n        var scope = this;\r\n        this.raycaster.setFromCamera(pointer, this.engine.camera);\r\n\r\n        /**\r\n         * thứ tự ưu tiên\r\n         * 1 object\r\n         * 2 target\r\n         * 3 light\r\n         */\r\n\r\n\r\n\r\n        if (!this.lightHelperStatus) {\r\n            const intersects = this.raycaster.intersectObjects(this.objects, true);\r\n            // objects\r\n\r\n            if (intersects.length > 0) {\r\n                const object = intersects[0].object;\r\n                const obj = this.closestObjectInScene(object);\r\n                if (obj) {\r\n                    if (obj !== this.selected) {\r\n                        if (this.currentObject && this.currentObject != obj) {\r\n                            this.setCurrent(null);\r\n                        }\r\n                        this.transformMode = 'basic';\r\n                        this.setCurrent(obj);\r\n                        // scope.app.canTransferEventToControls = true;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            const targetIntersects = this.raycaster.intersectObjects(this.targets, true);\r\n            if (targetIntersects.length) {\r\n                const target = this.closestLightTargetControlInScene(targetIntersects[0].object);\r\n                if (target) {\r\n                    this.transformMode = 'basic';\r\n                    this.attachLightTargetControl(target);\r\n                    // scope.app.canTransferEventToControls = true;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            /// light\r\n            if (this.currentLight && this.currentTargetControl && this.currentTargetControl.light == this.currentLight) {\r\n                this.detactLightTargetControl();\r\n                this.transformMode = 'basic';\r\n                this.control.attach(this.currentLight);\r\n                // scope.app.canTransferEventToControls = true;\r\n            } else {\r\n                this.detactLightTargetControl();\r\n            }\r\n\r\n\r\n\r\n            // ligjy\r\n            const lightIntersects = this.raycaster.intersectObjects(this.lights, true);\r\n\r\n            if (lightIntersects.length > 0) {\r\n                const object = lightIntersects[0].object;\r\n                const light = this.closestLightInScene(object);\r\n\r\n                if (light) {\r\n                    if (light != this.control.object) {\r\n                        if (this.currentLight && this.currentLight != light) {\r\n                            this.setCurrent(null);\r\n                        }\r\n                        this.setCurrent(light);\r\n                        this.transformMode = 'basic';\r\n                    }\r\n                    // scope.app.canTransferEventToControls = true;\r\n                    return;\r\n\r\n                }\r\n            }\r\n            const pickerIntersects = this.raycaster.intersectObjects(this.pickers, true);\r\n            if (pickerIntersects.length > 0) {\r\n                const object = pickerIntersects[0].object;\r\n                const light = this.closestLightInScene(object);\r\n\r\n                if (light) {\r\n                    if (light != this.control.object) {\r\n                        if (this.currentLight && this.currentLight != light) {\r\n                            this.setCurrent(null);\r\n                        }\r\n                        this.setCurrent(light);\r\n                        this.transformMode = 'basic';\r\n                    }\r\n                    // scope.app.canTransferEventToControls = true;\r\n                    return;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        if (this.currentLight) this.detachLight();\r\n        if (this.currentObject) this.detachObject();\r\n        if (this.currentTargetControl) {\r\n            this.scene.remove(this.currentTargetControl);\r\n            // this.select(null);\r\n        }\r\n        this.transformMode = 'basic';\r\n        this.control.detach();\r\n        this.setCurrent(null);\r\n        this.select(null);\r\n        this.selected = null;\r\n        // this.engine.refresh();\r\n\r\n\r\n\r\n    },\r\n\r\n    unselect: function () {\r\n        this.transformMode = 'basic';\r\n        this.control.detach();\r\n        this.setCurrent(null);\r\n        this.select(null);\r\n        this.selected = null;\r\n    },\r\n\r\n\r\n    /**\r\n     * tìm object trong bảng\r\n     * @param {Object} obj \r\n     * @returns {Object#d|Group|Mesh}\r\n     */\r\n    closestLightTargetControlInScene: function (obj: any) {\r\n        if (isObject(obj) && !obj.isScene && this.currentLight) {\r\n            var light = this.currentLight;\r\n            for (let i = 0; i < this.targets.length; i++) {\r\n                const sobj = this.targets[i];\r\n                if (obj == sobj && sobj.light == light) return sobj;\r\n\r\n\r\n            }\r\n            if (obj.parent) {\r\n                return this.closestLightInScene(obj.parent);\r\n            }\r\n\r\n\r\n        }\r\n        return null;\r\n    },\r\n\r\n\r\n\r\n\r\n    isSelected: function (object: any) {\r\n        return object == this.selected ? true : (\r\n            (object.isScene || !object.parent) ? false : this.isSelected(object.parent)\r\n        )\r\n    },\r\n\r\n    attachObject: function (object3D: any) {\r\n        if (this.currentLight) {\r\n            this.detachLight();\r\n        }\r\n        if (this.currentObject) {\r\n            this.detachObject();\r\n        }\r\n        this.currentObject = object3D;\r\n        var helper = this.getHelper(object3D);\r\n\r\n        this.helper = helper;\r\n        this.control.attach(object3D);\r\n\r\n        this.scene.remove(helper);\r\n        this.scene.add(helper);\r\n\r\n        // this.dispatchEvent({\r\n        //     type: 'object.attach',\r\n        //     object: object3D,\r\n        //     mode: this.control.mode\r\n        // });\r\n        // this.engine.refresh();\r\n        return false;\r\n\r\n\r\n    },\r\n    detachObject: function () {\r\n        this.control.detach();\r\n        if (this.helper) {\r\n            this.helper.position.set(0, 0, 0);\r\n            this.helper.rotation.set(0, 0, 0);\r\n            this.helper.scale.set(1, 1, 1);\r\n            this.scene.remove(this.helper);\r\n\r\n        }\r\n        var obj = this.currentObject;\r\n        this.currentObject = null;\r\n        // this.dispatchEvent({\r\n        //     type: 'object.detach',\r\n        //     object: obj\r\n        // });\r\n\r\n        this.engine.refresh();\r\n    },\r\n\r\n\r\n    attachLight: function (light: any) {\r\n        if (!light) {\r\n            console.warn(\"Lỗi kkho có ligh\");\r\n            return;\r\n        }\r\n        if (this.currentObject) {\r\n            this.detachObject();\r\n        }\r\n        if (this.currentLight) {\r\n            this.detachLight();\r\n        }\r\n        this.currentLight = light;\r\n        this.control.attach(light);\r\n        var targetControl = this.getLightTargetControlObject(light);\r\n        if (targetControl) {\r\n            this.scene.remove(targetControl);\r\n            this.scene.add(targetControl);\r\n        }\r\n        // this.dispatchEvent({\r\n        //     type: 'light.attach',\r\n        //     light: light,\r\n        //     mode: this.control.mode\r\n        // });\r\n\r\n    },\r\n    detachLight: function () {\r\n        this.control.detach();\r\n        var obj = this.currentLight;\r\n        var targetControl = this.getLightTargetControlObject(obj);\r\n        if (targetControl) {\r\n            this.scene.remove(targetControl);\r\n        }\r\n\r\n        this.currentLight = null;\r\n        this.selected = null;\r\n        // this.dispatchEvent({\r\n        //     type: 'light.detach',\r\n        //     light: obj\r\n        // });\r\n    },\r\n\r\n    executeCommand: function (command: any) {\r\n        if (!this.control.object) {\r\n            if (this.selected) {\r\n                if (!this.selected.isLight) {\r\n                    this.attachObject(this.selected);\r\n                } else {\r\n                    this.attachLight(this.selected);\r\n                }\r\n                this.transformMode = command;\r\n            }\r\n        }\r\n        if (this.control.object && this.control.object.isTargetControlObject) {\r\n            command = 'translate';\r\n        }\r\n        switch (command) {\r\n\r\n            case \"space\":\r\n                this.control.setSpace(this.control.space === \"local\" ? \"world\" : \"local\");\r\n                break;\r\n\r\n            case \"snap\":\r\n                this.control.setTranslationSnap(100);\r\n                this.control.setRotationSnap(THREE.MathUtils.degToRad(15));\r\n                this.control.setScaleSnap(0.25);\r\n                break;\r\n\r\n            case 'unsnap':\r\n                this.control.setTranslationSnap(null);\r\n                this.control.setRotationSnap(null);\r\n                this.control.setScaleSnap(null);\r\n                break;\r\n\r\n            case \"translate\":\r\n                this.control.setMode(\"translate\");\r\n                break;\r\n\r\n            case \"rotate\":\r\n                this.control.setMode(\"rotate\");\r\n                break;\r\n\r\n            case \"scale\":\r\n                this.control.setMode(\"scale\");\r\n                break;\r\n\r\n            case \"upsize\":\r\n                this.control.setSize(this.control.size + 0.1);\r\n                break;\r\n\r\n            case \"downsize\":\r\n                this.control.setSize(Math.max(this.control.size - 0.1, 0.1));\r\n                break;\r\n\r\n            case \"toggle:x\":\r\n                this.control.showX = !this.control.showX;\r\n                break;\r\n\r\n            case \"toggle:y\":\r\n                this.control.showY = !this.control.showY;\r\n                break;\r\n\r\n            case \"toggle:z\":\r\n                this.control.showZ = !this.control.showZ;\r\n                break;\r\n\r\n            case \"enable\":\r\n                this.control.enabled = !this.control.enabled;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this.engine.refresh();\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n});\r\n\r\nconst ClientEditor = Editor__ as EditorClass;\r\n\r\nexport default ClientEditor;","import { CategoryModel } from './model';\r\nexport class CategoryResultsModel {\r\n  data?: CategoryModel[];\r\n  pageCount?: number;\r\n  total?: number;\r\n  page: number;\r\n  count?: number;\r\n  message?: string;\r\n  status?: number;\r\n  current_page?:number\r\n  page_total?:number\r\n  per_page?:number\r\n}\r\n\r\nexport class CategoryResultModel {\r\n  data?: CategoryModel;\r\n  validationErrors?: Array<{ field?: string; message?: string }>;\r\n}\r\n","export * from './model';\r\nexport * from './results.model';\r\n\r\nexport * from './service';\r\n","import { assignValue, assignWithout, date, getArguments, getType, inArray, isArray, isBoolean, isEmpty, isFunction, isNull, isObject, isString, Str, _defineProperty, _instanceof } from './utils';\r\n// import Dom, { $, Query, query } from './dom.js';\r\nimport createClass, { _class } from './es5.class';\r\nimport Dom, { DomEl, getDomInf, inputTypes, inputTags, createEl, create, DomFactory } from './dom';\r\n\r\ntype HtmlAttributes = {\r\n    id?:string\r\n    className?:string,\r\n    style?:{\r\n        [attr:string]:string|number\r\n    }\r\n    [attr:string]:any\r\n};\r\ntype HtmlCreator = (selector?: any, children?: any, attribute?: HtmlAttributes, ...args: any[]) => HTMLElement\r\n\r\ntype HtmlArgs = (DomEl | string | Element);\r\n\r\ninterface HTMLFactory extends DomFactory {\r\n\r\n\r\n    /**\r\n     * Tạo đối tượng dome element với 3 tham số:\r\n     * @param {string} selector selector không băt buộc có dạng #id.class[attribute=\"value\"]:prop tất caa3 cá thành phần đều không bắt buộc và có thể lặp lại nhiều lần tức là nhiều class hoặc thuộc tính. chỉ có id là duy nhất\r\n     * @param {Element[]|DomEl[]|string[]} children Mảng các phần tử con\r\n     * @param {object} attributes các thuộc tính\r\n     * @returns {DomEl}\r\n     */\r\n    new(selector: string, children?: HtmlArgs[], attributes?: HtmlAttributes, ...args:any[]): DomEl,\r\n    new(children?: HtmlArgs[], attributes?: HtmlAttributes, ...args:any[]): DomEl,\r\n    new(attributes?: HtmlAttributes, ...args:HtmlArgs[]): DomEl,\r\n    new(selector?: string, children?: HtmlArgs[], attributes?: HtmlAttributes, ...args:HtmlArgs[]): DomEl,\r\n    \r\n    (selector: string, children?: HtmlArgs[], attributes?: HtmlAttributes, ...args: HtmlArgs[]): HTMLElement,\r\n    (children: HtmlArgs[], attributes?: HtmlAttributes, ...args: HtmlArgs[]): HTMLElement,\r\n    (attributes?: HtmlAttributes, ...args: HtmlArgs[]): HTMLElement,\r\n    (child: HtmlArgs, attributes?: HtmlAttributes, ...args: HtmlArgs[]): HTMLElement,\r\n    (): HTMLElement,\r\n    \r\n    \r\n    a: HtmlCreator, abbr: HtmlCreator, acronym: HtmlCreator, address: HtmlCreator, applet: HtmlCreator, area: HtmlCreator, article: HtmlCreator, aside: HtmlCreator, audio: HtmlCreator,\r\n    b: HtmlCreator, base: HtmlCreator, basefont: HtmlCreator, bb: HtmlCreator, bdo: HtmlCreator, big: HtmlCreator, blockquote: HtmlCreator, body: HtmlCreator, br: HtmlCreator, button: HtmlCreator,\r\n    canvas: HtmlCreator, caption: HtmlCreator, center: HtmlCreator, cite: HtmlCreator, code: HtmlCreator, col: HtmlCreator, colgroup: HtmlCreator, command: HtmlCreator,\r\n    datagrid: HtmlCreator, datalist: HtmlCreator, dd: HtmlCreator, del: HtmlCreator, details: HtmlCreator, dfn: HtmlCreator, dialog: HtmlCreator, dir: HtmlCreator, div: HtmlCreator, dl: HtmlCreator, dt: HtmlCreator,\r\n    em: HtmlCreator, embed: HtmlCreator, eventsource: HtmlCreator,\r\n    fieldset: HtmlCreator, figcaption: HtmlCreator, figure: HtmlCreator, font: HtmlCreator, footer: HtmlCreator, form: HtmlCreator, frame: HtmlCreator, frameset: HtmlCreator,\r\n    h1: HtmlCreator, h2: HtmlCreator, h3: HtmlCreator, h4: HtmlCreator, h5: HtmlCreator, h6: HtmlCreator, head: HtmlCreator, header: HtmlCreator, hgroup: HtmlCreator, hr: HtmlCreator,\r\n    i: HtmlCreator, iframe: HtmlCreator, img: HtmlCreator, input: HtmlCreator, ins: HtmlCreator, isindex: HtmlCreator,\r\n    kbd: HtmlCreator, keygen: HtmlCreator,\r\n    label: HtmlCreator, legend: HtmlCreator, li: HtmlCreator, link: HtmlCreator,\r\n    map: HtmlCreator, mark: HtmlCreator, menu: HtmlCreator, meta: HtmlCreator, meter: HtmlCreator,\r\n    nav: HtmlCreator, noframes: HtmlCreator, noscript: HtmlCreator,\r\n    ol: HtmlCreator, optgroup: HtmlCreator, option: HtmlCreator, output: HtmlCreator,\r\n    p: HtmlCreator, param: HtmlCreator, pre: HtmlCreator, progress: HtmlCreator,\r\n    q: HtmlCreator,\r\n    rp: HtmlCreator, rt: HtmlCreator, ruby: HtmlCreator,\r\n    s: HtmlCreator, samp: HtmlCreator, script: HtmlCreator, section: HtmlCreator, select: HtmlCreator, small: HtmlCreator, source: HtmlCreator, span: HtmlCreator, strike: HtmlCreator, strong: HtmlCreator, style: HtmlCreator, sub: HtmlCreator, sup: HtmlCreator,\r\n    table: HtmlCreator, tbody: HtmlCreator, td: HtmlCreator, textarea: HtmlCreator, tfoot: HtmlCreator, th: HtmlCreator, thead: HtmlCreator, time: HtmlCreator, title: HtmlCreator, tr: HtmlCreator, track: HtmlCreator, tt: HtmlCreator,\r\n    u: HtmlCreator, ul: HtmlCreator,\r\n    video: HtmlCreator,\r\n    wbr: HtmlCreator,\r\n    A: DomFactory, Abbr: DomFactory, Acronym: DomFactory, Address: DomFactory, Applet: DomFactory, Area: DomFactory, Article: DomFactory, Aside: DomFactory, Audio: DomFactory,\r\n    B: DomFactory, Base: DomFactory, Basefont: DomFactory, Bb: DomFactory, Bdo: DomFactory, Big: DomFactory, Blockquote: DomFactory, Body: DomFactory, Br: DomFactory, Button: DomFactory,\r\n    Canvas: DomFactory, Caption: DomFactory, Center: DomFactory, Cite: DomFactory, Code: DomFactory, Col: DomFactory, Colgroup: DomFactory, Command: DomFactory,\r\n    Datagrid: DomFactory, Datalist: DomFactory, Dd: DomFactory, Del: DomFactory, Details: DomFactory, Dfn: DomFactory, Dialog: DomFactory, Dir: DomFactory, Div: DomFactory, Dl: DomFactory, Dt: DomFactory,\r\n    Em: DomFactory, Embed: DomFactory, Eventsource: DomFactory,\r\n    Fieldset: DomFactory, Figcaption: DomFactory, Figure: DomFactory, Font: DomFactory, Footer: DomFactory, Form: DomFactory, Frame: DomFactory, Frameset: DomFactory,\r\n    H1: DomFactory, H2: DomFactory, H3: DomFactory, H4: DomFactory, H5: DomFactory, H6: DomFactory, Head: DomFactory, Header: DomFactory, Hgroup: DomFactory, Hr: DomFactory,\r\n    I: DomFactory, Iframe: DomFactory, Img: DomFactory, Input: DomFactory, Ins: DomFactory, Isindex: DomFactory, Kbd: DomFactory, Keygen: DomFactory,\r\n    Label: DomFactory, Legend: DomFactory, Li: DomFactory, Link: DomFactory,\r\n    Map: DomFactory, Mark: DomFactory, Menu: DomFactory, Meta: DomFactory, Meter: DomFactory,\r\n    Nav: DomFactory, Noframes: DomFactory, Noscript: DomFactory,\r\n    Ol: DomFactory, Optgroup: DomFactory, Option: DomFactory, Output: DomFactory,\r\n    P: DomFactory, Param: DomFactory, Pre: DomFactory, Progress: DomFactory,\r\n    Q: DomFactory,\r\n    Rp: DomFactory, Rt: DomFactory, Ruby: DomFactory,\r\n    S: DomFactory, Samp: DomFactory, Script: DomFactory, Section: DomFactory, Select: DomFactory, Small: DomFactory, Source: DomFactory, Span: DomFactory, Strike: DomFactory, Strong: DomFactory, Style: DomFactory, Sub: DomFactory, Sup: DomFactory,\r\n    Table: DomFactory, Tbody: DomFactory, Td: DomFactory, Textarea: DomFactory, Tfoot: DomFactory, Th: DomFactory, Thead: DomFactory, Time: DomFactory, Title: DomFactory, Tr: DomFactory, Track: DomFactory, Tt: DomFactory,\r\n    U: DomFactory, Ul: DomFactory,\r\n    Video: DomFactory,\r\n    Wbr: DomFactory\r\n}\r\n\r\n\r\nfunction checkImageURL(url) {\r\n    return (url.match(/\\.(jpeg|jpg|gif|png|svg)$/) != null || url.match(/^(http|https)\\:\\/\\//) != null);\r\n}\r\n/**\r\n * Tạo một lớp đối tượng\r\n * @param {string} tag tên thẻ bạn muốn khởi tạo\r\n * @returns {Html}\r\n */\r\nfunction createElementClass(tag?: any, properties?: any): DomFactory {\r\n    var prop: any = {};\r\n    if (isObject(properties)) {\r\n        for (var key in properties) {\r\n            if (Object.hasOwnProperty.call(properties, key)) {\r\n                var fn = properties[key];\r\n                if (key == \"constructor\") {\r\n                    if (typeof fn == \"function\") prop.__constructor__ = fn;\r\n                }\r\n                else {\r\n                    prop[key] = fn;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    var t = tag.toLowerCase();\r\n    var classProps = {\r\n        $tagName: tag,\r\n        constructor: function () {\r\n            var args = getArguments(arguments);\r\n            if (args.length && isString(args[0])) {\r\n                if (args[0].match(/^(\\.|\\#|\\[|\\:)[A-Za-z_\\-]+/i) !== null) {\r\n                    var a = getDomInf(args[0]);\r\n                    if (a.isElement) {\r\n                        if (a.isDefault) {\r\n                            args[0] = tag.toLowerCase() + args[0];\r\n                        } else {\r\n                            args[0] = this.tagName + args[0].substr(a.tagName.length);\r\n                        }\r\n                    }\r\n                    else {\r\n                        args.unshift(this.tagName);\r\n                    }\r\n                }\r\n                else {\r\n                    args.unshift(this.tagName);\r\n                    if (args[0].match(/^\\{.*\\}$/i) !== null) {\r\n                        args[0] = args[0].substr(1, args[0].length - 2);\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                args.unshift(this.tagName);\r\n            }\r\n\r\n            this.setElement.apply(this, args);\r\n        }\r\n    };\r\n    classProps['const$is' + Str.ucfirst(t)] = true;\r\n    if (t == 'img') {\r\n        assignValue(classProps, {\r\n            $isImage: true,\r\n            $srcSync: false,\r\n            $src: null,\r\n            inits: '__src_init__',\r\n            onGet$src: function (value) {\r\n                // return this.val();\r\n            },\r\n            onset$src: function (value) {\r\n                if (this.srcSync) this.attr('src', value);\r\n            },\r\n            __src_init__: function () {\r\n                this.src = this.attr('src');\r\n                var self = this;\r\n                this.on('change', function (e) {\r\n                    var value = this.attr('src');\r\n                    if (value != self.src) {\r\n                        self.valueSync = false;\r\n                        self.src = value;\r\n                        self.srcSync = true;\r\n                    }\r\n                });\r\n                this.srcSync = true;\r\n            },\r\n            constructor: function constructor() {\r\n                var args = getArguments(arguments);\r\n                var src = null;\r\n                var createArgs = [];\r\n                var attrs: any = {};\r\n                var hasTag = false;\r\n                for (var index = 0; index < args.length; index++) {\r\n                    var vl = args[index];\r\n                    if (index == 0) {\r\n                        if (isString(vl)) {\r\n                            if (checkImageURL(vl)) {\r\n                                src = vl;\r\n                                createArgs.unshift(this.tagName);\r\n                            } else {\r\n                                var a = getDomInf(vl);\r\n                                if (a.isElement) {\r\n                                    if (a.isDefault) {\r\n                                        createArgs.push(tag.toLowerCase() + args[0]);\r\n                                        hasTag = true;\r\n                                    } else {\r\n                                        createArgs.push(this.tagName + args[0].substr(a.tagName.length));\r\n                                        hasTag = true;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    createArgs.unshift(this.tagName);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            createArgs.unshift(this.tagName);\r\n                            assignValue(attrs, vl);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (isString(vl)) {\r\n                            if (!src && checkImageURL(vl)) {\r\n                                src = vl;\r\n                            }\r\n                            else {\r\n                                attrs.alt = vl;\r\n                            }\r\n\r\n                        }\r\n                        else if (isObject(vl)) {\r\n                            assignValue(attrs, vl);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (src && !attrs.src) attrs.src = src;\r\n                createArgs.push(attrs);\r\n\r\n                this.setElement.apply(this, createArgs);\r\n            }\r\n        });\r\n    }\r\n    else if (t == 'input') {\r\n        assignValue(classProps, {\r\n            $valueSync: false,\r\n            $value: null,\r\n            inits: '__value_init__',\r\n            onGet$Value: function (value) {\r\n                // return this.val();\r\n            },\r\n            onset$value: function (value) {\r\n                if (this.valueSync) this.val(value);\r\n            },\r\n            __value_init__: function () {\r\n                this.value = this.val();\r\n                var self = this;\r\n                this.on('change', function (e) {\r\n                    var value = this.val();\r\n                    if (value != self.value) {\r\n                        self.valueSync = false;\r\n                        self.value = value;\r\n                        self.valueSync = true;\r\n                    }\r\n                });\r\n                this.valueSync = true;\r\n            },\r\n            constructor: function constructor() {\r\n                var args = getArguments(arguments);\r\n                // nếu nhập vào (\"select\", \"name\", \"value\", data)\r\n                var createArgs = [];\r\n                var domEls = [];\r\n                if (args.length) {\r\n                    if (isObject(args[0]) && !args[0].isDom) {\r\n\r\n                        createArgs.push(args[0])\r\n\r\n                    }\r\n                    else {\r\n                        var inputOptions: any = {\r\n                            type: \"\",\r\n                            name: \"\",\r\n                            value: \"\",\r\n                            default: \"\",\r\n                            data: {}\r\n                        }\r\n                        var s = 0;\r\n                        var domEls = [];\r\n                        for (var index = 0; index < args.length; index++) {\r\n                            var vl = args[index];\r\n\r\n                            if (isString(vl)) {\r\n                                var vlow = String(vl).toLowerCase();\r\n                                if (!s) {\r\n                                    var a = getDomInf(vl);\r\n                                    if (inputTypes.indexOf(vlow) !== -1 || inputTags.indexOf(vlow) !== -1) {\r\n                                        inputOptions.type = vlow;\r\n                                        s++;\r\n                                    }\r\n                                    else if (a.isElement) {\r\n                                        var tg = a.tagName.toLowerCase();\r\n                                        if (inputTypes.indexOf(tg) !== -1) {\r\n                                            inputOptions.type = tg;\r\n                                        }\r\n                                        else if (inputTags.indexOf(tg) != -1) {\r\n                                            inputOptions.type = tg;\r\n                                        }\r\n                                        s++;\r\n                                        if (!isEmpty(a.attrs)) {\r\n                                            assignValue(inputOptions, a.attrs);\r\n                                        };\r\n                                        if (!isEmpty(a.props)) assignValue(inputOptions, a.props);\r\n                                        if (a.className) {\r\n                                            inputOptions.className = a.className;\r\n                                        }\r\n                                        if (a.id) {\r\n                                            inputOptions.id = a.id;\r\n                                        }\r\n\r\n                                    } else {\r\n                                        inputOptions.name = vl;\r\n                                        s++;\r\n                                    }\r\n\r\n                                }\r\n                                else if (index < 3) {\r\n                                    if ((inputOptions.name && inputTypes.indexOf(vlow) !== -1 || inputTags.indexOf(vlow) !== -1) && !inputOptions.type) {\r\n                                        inputOptions.type = vlow;\r\n                                    }\r\n                                    else if (!inputOptions.name && vl.match(/^[A-z_]+[A-z_\\[\\]0-9\\.\\-]*$/i) != null) {\r\n                                        inputOptions.name = vl;\r\n                                    }\r\n                                    else {\r\n                                        inputOptions.value = vl;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (isObject(vl)) {\r\n                                if (vl.isDom) {\r\n                                    domEls.push(vl);\r\n                                }\r\n                                else {\r\n                                    assignValue(inputOptions, vl);\r\n                                }\r\n\r\n                            }\r\n\r\n\r\n                        }\r\n                        if (!inputOptions.type) inputOptions.type = 'text';\r\n                        createArgs.push(inputOptions);\r\n                    }\r\n                }\r\n                if (createArgs.length) {\r\n                    var elem = input1.apply(this, createArgs);\r\n                    var el = elem.el;\r\n                    if (el) {\r\n\r\n                        if (!el.id && this.id) el.id = this.id;\r\n                        if (!el.className && this.className) el.className = this.className;\r\n\r\n                        this.el = el;\r\n                        if (!isEmpty(elem.dynamicAttrs)) {\r\n                            this.addDynamicAttr(elem.dynamicAttrs);\r\n                        }\r\n                        // console.log(this, args, elem.contents);\r\n                        if (elem.tag == 'select' && !isEmpty(elem.contents)) {\r\n                            this.setHtml(Dom('div', elem.contents).html());\r\n\r\n                        }\r\n                        if (!isEmpty(elem.events)) {\r\n                            this.on(elem.events);\r\n                        }\r\n\r\n                        // DoanDepTrai\r\n                        if (!isEmpty(elem.methods)) {\r\n                            for (var method in elem.methods) {\r\n                                if (Object.hasOwnProperty.call(elem.methods, method)) {\r\n                                    var fn = elem.methods[method];\r\n                                    // console.log(method, fn)\r\n                                    _defineProperty(this, method, fn);\r\n                                }\r\n                            }\r\n                        }\r\n                        if (this._pendingContents.length) {\r\n                            while (this._pendingContents.length) {\r\n                                var a = this._pendingContents.shift();\r\n                                this[a.key] = a.content;\r\n                                this.append(a.content);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    const $class: any = createClass(Str.ucfirst(tag), false).extends(Dom).uses(prop)(classProps);\r\n\r\n    return $class;\r\n}\r\n\r\nfunction createHtmlElementFunction(tag: string): HtmlCreator {\r\n    var tagName = tag.toLowerCase();\r\n    var fn = function (...args: any[]) {\r\n        if (args.length && isString(args[0])) {\r\n            if (args[0].match(/^(\\.|\\#|\\[|\\:)[A-Za-z_\\-]+/i) !== null) {\r\n                var a = getDomInf(args[0]);\r\n                if (a.isElement) {\r\n                    if (a.isDefault) {\r\n                        args[0] = tag.toLowerCase() + args[0];\r\n                    } else {\r\n                        args[0] = tagName + args[0].substr(a.tagName.length);\r\n                    }\r\n                }\r\n                else {\r\n                    args.unshift(tagName);\r\n                }\r\n            }\r\n            else {\r\n                args.unshift(tagName);\r\n                if (args[0].match(/^\\{.*\\}$/i) !== null) {\r\n                    args[0] = args[0].substr(1, args[0].length - 2);\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n            args.unshift(tagName);\r\n        }\r\n        return createEl(...args);\r\n    };\r\n    if (tagName == \"input\") {\r\n        fn = function (...args: any[]) {\r\n            var createArgs = [];\r\n            var domEls = [];\r\n            if (args.length) {\r\n                if (isObject(args[0]) && !args[0].isDom) {\r\n\r\n                    createArgs.push(args[0])\r\n\r\n                }\r\n                else {\r\n                    var inputOptions: any = {\r\n                        type: \"\",\r\n                        name: \"\",\r\n                        value: \"\",\r\n                        default: \"\",\r\n                        data: {}\r\n                    }\r\n                    var s = 0;\r\n                    var domEls = [];\r\n                    for (var index = 0; index < args.length; index++) {\r\n                        var vl = args[index];\r\n\r\n                        if (isString(vl)) {\r\n                            var vlow = String(vl).toLowerCase();\r\n                            if (!s) {\r\n                                var a = getDomInf(vl);\r\n                                if (inputTypes.indexOf(vlow) !== -1 || inputTags.indexOf(vlow) !== -1) {\r\n                                    inputOptions.type = vlow;\r\n                                    s++;\r\n                                }\r\n                                else if (a.isElement) {\r\n                                    var tg = a.tagName.toLowerCase();\r\n                                    if (inputTypes.indexOf(tg) !== -1) {\r\n                                        inputOptions.type = tg;\r\n                                    }\r\n                                    else if (inputTags.indexOf(tg) != -1) {\r\n                                        inputOptions.type = tg;\r\n                                    }\r\n                                    s++;\r\n                                    if (!isEmpty(a.attrs)) {\r\n                                        assignValue(inputOptions, a.attrs);\r\n                                    };\r\n                                    if (!isEmpty(a.props)) assignValue(inputOptions, a.props);\r\n                                    if (a.className) {\r\n                                        inputOptions.className = a.className;\r\n                                    }\r\n                                    if (a.id) {\r\n                                        inputOptions.id = a.id;\r\n                                    }\r\n\r\n                                } else {\r\n                                    inputOptions.name = vl;\r\n                                    s++;\r\n                                }\r\n\r\n                            }\r\n                            else if (index < 3) {\r\n                                if ((inputOptions.name && inputTypes.indexOf(vlow) !== -1 || inputTags.indexOf(vlow) !== -1) && !inputOptions.type) {\r\n                                    inputOptions.type = vlow;\r\n                                }\r\n                                else if (!inputOptions.name && vl.match(/^[A-z_]+[A-z_\\[\\]0-9\\.\\-]*$/i) != null) {\r\n                                    inputOptions.name = vl;\r\n                                }\r\n                                else {\r\n                                    inputOptions.value = vl;\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (isObject(vl)) {\r\n                            if (vl.isDom) {\r\n                                domEls.push(vl);\r\n                            }\r\n                            else {\r\n                                assignValue(inputOptions, vl);\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n                    if (!inputOptions.type) inputOptions.type = 'text';\r\n                    createArgs.push(inputOptions);\r\n                }\r\n            }\r\n            if (createArgs.length) {\r\n                return input2(createArgs);\r\n\r\n            }\r\n            else {\r\n                return input2({\r\n                    type: \"text\"\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n    } else if (tagName == \"img\") {\r\n        fn = function (...args: any[]) {\r\n            var src = null;\r\n            var createArgs = [];\r\n            var attrs: any = {};\r\n            var hasTag = false;\r\n            for (var index = 0; index < args.length; index++) {\r\n                var vl = args[index];\r\n                if (index == 0) {\r\n                    if (isString(vl)) {\r\n                        if (checkImageURL(vl)) {\r\n                            src = vl;\r\n                            createArgs.unshift(tagName);\r\n                        } else {\r\n                            var a = getDomInf(vl);\r\n                            if (a.isElement) {\r\n                                if (a.isDefault) {\r\n                                    createArgs.push(tag.toLowerCase() + args[0]);\r\n                                    hasTag = true;\r\n                                } else {\r\n                                    createArgs.push(tagName + args[0].substr(a.tagName.length));\r\n                                    hasTag = true;\r\n                                }\r\n                            }\r\n                            else {\r\n                                createArgs.unshift(tagName);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        createArgs.unshift(tagName);\r\n                        assignValue(attrs, vl);\r\n                    }\r\n                }\r\n                else {\r\n                    if (isString(vl)) {\r\n                        if (!src && checkImageURL(vl)) {\r\n                            src = vl;\r\n                        }\r\n                        else {\r\n                            attrs.alt = vl;\r\n                        }\r\n\r\n                    }\r\n                    else if (isObject(vl)) {\r\n                        assignValue(attrs, vl);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (src && !attrs.src) attrs.src = src;\r\n            createArgs.push(attrs);\r\n\r\n            return createEl(...args);\r\n        };\r\n\r\n    }\r\n\r\n    return fn;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction input1(args: any) {\r\n    if (typeof args == \"object\") {\r\n        var tagName = 'input';\r\n        var attrs: any = {};\r\n        var content = null;\r\n        var value = null;\r\n        var type = \"text\";\r\n        var ignore = [];\r\n        var data = [];\r\n        var boot = null,\r\n            init = null;\r\n        for (var prop in args) {\r\n            if (args.hasOwnProperty(prop)) {\r\n                var val = args[prop];\r\n                let p = prop.toLowerCase();\r\n                if (p == 'type') {\r\n                    let v = (typeof val == 'string') ? val.toLowerCase() : 'text';\r\n                    type = v;\r\n                    if (v == 'textarea') {\r\n                        tagName = v;\r\n                        ignore.push(\"type\", \"value\");\r\n                    } else if (v == \"select\") {\r\n                        tagName = \"select\";\r\n                        ignore.push(\"type\", \"value\", \"data\");\r\n                    } else {\r\n                        attrs[p] = v;\r\n                    }\r\n                } else if (ignore.indexOf(p) >= 0) {\r\n                    // next\r\n                } else if (p == \"init\") {\r\n                    init = val;\r\n                } else if (p == \"boot\") {\r\n                    boot = val;\r\n                } else {\r\n                    attrs[prop] = val;\r\n                }\r\n\r\n                if (p == 'value') {\r\n                    value = val;\r\n                } else if (p == 'data') {\r\n                    data = val;\r\n                }\r\n            }\r\n        }\r\n        var attributes = {};\r\n        for (var key in attrs) {\r\n            if (attrs.hasOwnProperty(key)) {\r\n                var va = attrs[key];\r\n                if (ignore.indexOf(key.toLowerCase()) >= 0) {\r\n                    // next\r\n                } else {\r\n                    attributes[key] = va;\r\n                }\r\n            }\r\n        }\r\n        if (type == 'select') {\r\n            content = [];\r\n            if (typeof data == \"object\") {\r\n                for (var vl in data) {\r\n                    if (data.hasOwnProperty(vl)) {\r\n                        var text = data[vl];\r\n                        let option: any = { value: vl };\r\n                        if (vl == value) {\r\n                            option.selected = \"selected\";\r\n                        }\r\n                        content.push(createEl('option', text, option));\r\n                    }\r\n                }\r\n            }\r\n        } else if (type == \"textarea\") {\r\n            content = value;\r\n        } else {\r\n            content = attributes;\r\n        }\r\n        return create.call(this, tagName, attributes, content, boot, init);\r\n    }\r\n    return null;\r\n};\r\n\r\nfunction input2(args: any) {\r\n    if (typeof args == \"object\") {\r\n        var tagName = 'input';\r\n        var attrs: any = {};\r\n        var content = null;\r\n        var value = null;\r\n        var type = \"text\";\r\n        var ignore = [];\r\n        var data = [];\r\n        var boot = null,\r\n            init = null;\r\n        for (var prop in args) {\r\n            if (args.hasOwnProperty(prop)) {\r\n                var val = args[prop];\r\n                let p = prop.toLowerCase();\r\n                if (p == 'type') {\r\n                    let v = (typeof val == 'string') ? val.toLowerCase() : 'text';\r\n                    type = v;\r\n                    if (v == 'textarea') {\r\n                        tagName = v;\r\n                        ignore.push(\"type\", \"value\");\r\n                    } else if (v == \"select\") {\r\n                        tagName = \"select\";\r\n                        ignore.push(\"type\", \"value\", \"data\");\r\n                    } else {\r\n                        attrs[p] = v;\r\n                    }\r\n                } else if (ignore.indexOf(p) >= 0) {\r\n                    // next\r\n                } else if (p == \"init\") {\r\n                    init = val;\r\n                } else if (p == \"boot\") {\r\n                    boot = val;\r\n                } else {\r\n                    attrs[prop] = val;\r\n                }\r\n\r\n                if (p == 'value') {\r\n                    value = val;\r\n                } else if (p == 'data') {\r\n                    data = val;\r\n                }\r\n            }\r\n        }\r\n        var attributes = {};\r\n        for (var key in attrs) {\r\n            if (attrs.hasOwnProperty(key)) {\r\n                var va = attrs[key];\r\n                if (ignore.indexOf(key.toLowerCase()) >= 0) {\r\n                    // next\r\n                } else {\r\n                    attributes[key] = va;\r\n                }\r\n            }\r\n        }\r\n        if (type == 'select') {\r\n            content = [];\r\n            if (typeof data == \"object\") {\r\n                for (var vl in data) {\r\n                    if (data.hasOwnProperty(vl)) {\r\n                        var text = data[vl];\r\n                        let option: any = { value: vl };\r\n                        if (vl == value) {\r\n                            option.selected = \"selected\";\r\n                        }\r\n                        content.push(createEl('option', text, option));\r\n                    }\r\n                }\r\n            }\r\n        } else if (type == \"textarea\") {\r\n            content = value;\r\n        } else {\r\n            content = attributes;\r\n        }\r\n        return createEl(tagName, attributes, content, boot, init);\r\n    }\r\n    return null;\r\n};\r\n\r\n\r\n\r\nconst A = createElementClass(\"a\"), Abbr = createElementClass(\"abbr\"), Acronym = createElementClass(\"acronym\"), Address = createElementClass(\"address\"), Applet = createElementClass(\"applet\"), Area = createElementClass(\"area\"), Article = createElementClass(\"article\"), Aside = createElementClass(\"aside\"), Audio = createElementClass(\"audio\");\r\nconst B = createElementClass(\"b\"), Base = createElementClass(\"base\"), Basefont = createElementClass(\"basefont\"), Bb = createElementClass(\"bb\"), Bdo = createElementClass(\"bdo\"), Big = createElementClass(\"big\"), Blockquote = createElementClass(\"blockquote\"), Body = createElementClass(\"body\"), Br = createElementClass(\"br\"), Button = createElementClass(\"button\");\r\nconst Canvas = createElementClass(\"canvas\"), Caption = createElementClass(\"caption\"), Center = createElementClass(\"center\"), Cite = createElementClass(\"cite\"), Code = createElementClass(\"code\"), Col = createElementClass(\"col\"), Colgroup = createElementClass(\"colgroup\"), Command = createElementClass(\"command\");\r\nconst Datagrid = createElementClass(\"datagrid\"), Datalist = createElementClass(\"datalist\"), Dd = createElementClass(\"dd\"), Del = createElementClass(\"del\"), Details = createElementClass(\"details\"), Dfn = createElementClass(\"dfn\"), Dialog = createElementClass(\"dialog\"), Dir = createElementClass(\"dir\"), Div = createElementClass(\"div\"), Dl = createElementClass(\"dl\"), Dt = createElementClass(\"dt\");\r\nconst Em = createElementClass(\"em\"), Embed = createElementClass(\"embed\"), Eventsource = createElementClass(\"eventsource\");\r\nconst Fieldset = createElementClass(\"fieldset\"), Figcaption = createElementClass(\"figcaption\"), Figure = createElementClass(\"figure\"), Font = createElementClass(\"font\"), Footer = createElementClass(\"footer\"), Form = createElementClass(\"form\"), Frame = createElementClass(\"frame\"), Frameset = createElementClass(\"frameset\");\r\nconst H1 = createElementClass(\"h1\"), H2 = createElementClass(\"h2\"), H3 = createElementClass(\"h3\"), H4 = createElementClass(\"h4\"), H5 = createElementClass(\"h5\"), H6 = createElementClass(\"h6\"), Head = createElementClass(\"head\"), Header = createElementClass(\"header\"), Hgroup = createElementClass(\"hgroup\"), Hr = createElementClass(\"hr\");\r\nconst I = createElementClass(\"i\"), Iframe = createElementClass(\"iframe\"), Img = createElementClass(\"img\"), Input = createElementClass(\"input\"), Ins = createElementClass(\"ins\"), Isindex = createElementClass(\"isindex\");\r\nconst Kbd = createElementClass(\"kbd\"), Keygen = createElementClass(\"keygen\");\r\nconst Label = createElementClass(\"label\"), Legend = createElementClass(\"legend\"), Li = createElementClass(\"li\"), Link = createElementClass(\"link\");\r\nconst Map = createElementClass(\"map\"), Mark = createElementClass(\"mark\"), Menu = createElementClass(\"menu\"), Meta = createElementClass(\"meta\"), Meter = createElementClass(\"meter\");\r\nconst Nav = createElementClass(\"nav\"), Noframes = createElementClass(\"noframes\"), Noscript = createElementClass(\"noscript\");\r\nconst Ol = createElementClass(\"ol\"), Optgroup = createElementClass(\"optgroup\"), Option = createElementClass(\"option\"), Output = createElementClass(\"output\");\r\nconst P = createElementClass(\"p\"), Param = createElementClass(\"param\"), Pre = createElementClass(\"pre\"), Progress = createElementClass(\"progress\");\r\nconst Q = createElementClass(\"q\");\r\nconst Rp = createElementClass(\"rp\"), Rt = createElementClass(\"rt\"), Ruby = createElementClass(\"ruby\"), S = createElementClass(\"s\");\r\nconst Samp = createElementClass(\"samp\"), Script = createElementClass(\"script\"), Section = createElementClass(\"section\"), Select = createElementClass(\"select\"), Small = createElementClass(\"small\"), Source = createElementClass(\"source\"), Span = createElementClass(\"span\"), Strike = createElementClass(\"strike\"), Strong = createElementClass(\"strong\"), Style = createElementClass(\"style\"), Sub = createElementClass(\"sub\"), Sup = createElementClass(\"sup\");\r\nconst Table = createElementClass(\"table\"), Tbody = createElementClass(\"tbody\"), Td = createElementClass(\"td\"), Textarea = createElementClass(\"textarea\"), Tfoot = createElementClass(\"tfoot\"), Th = createElementClass(\"th\"), Thead = createElementClass(\"thead\"), Time = createElementClass(\"time\"), Title = createElementClass(\"title\"), Tr = createElementClass(\"tr\"), Track = createElementClass(\"track\"), Tt = createElementClass(\"tt\");\r\nconst U = createElementClass(\"u\"), Ul = createElementClass(\"ul\");\r\nconst Video = createElementClass(\"video\");\r\nconst Wbr = createElementClass(\"wbr\");\r\n\r\nconst a = createHtmlElementFunction(\"a\"), abbr = createHtmlElementFunction(\"abbr\"), acronym = createHtmlElementFunction(\"acronym\"), address = createHtmlElementFunction(\"address\"), applet = createHtmlElementFunction(\"applet\"), area = createHtmlElementFunction(\"area\"), article = createHtmlElementFunction(\"article\"), aside = createHtmlElementFunction(\"aside\"), audio = createHtmlElementFunction(\"audio\"),\r\n    b = createHtmlElementFunction(\"b\"), base = createHtmlElementFunction(\"base\"), basefont = createHtmlElementFunction(\"basefont\"), bb = createHtmlElementFunction(\"bb\"), bdo = createHtmlElementFunction(\"bdo\"), big = createHtmlElementFunction(\"big\"), blockquote = createHtmlElementFunction(\"blockquote\"), body = createHtmlElementFunction(\"body\"), br = createHtmlElementFunction(\"br\"), button = createHtmlElementFunction(\"button\"),\r\n    canvas = createHtmlElementFunction(\"canvas\"), caption = createHtmlElementFunction(\"caption\"), center = createHtmlElementFunction(\"center\"), cite = createHtmlElementFunction(\"cite\"), code = createHtmlElementFunction(\"code\"), col = createHtmlElementFunction(\"col\"), colgroup = createHtmlElementFunction(\"colgroup\"), command = createHtmlElementFunction(\"command\"),\r\n    datagrid = createHtmlElementFunction(\"datagrid\"), datalist = createHtmlElementFunction(\"datalist\"), dd = createHtmlElementFunction(\"dd\"), del = createHtmlElementFunction(\"del\"), details = createHtmlElementFunction(\"details\"), dfn = createHtmlElementFunction(\"dfn\"), dialog = createHtmlElementFunction(\"dialog\"), dir = createHtmlElementFunction(\"dir\"), div = createHtmlElementFunction(\"div\"), dl = createHtmlElementFunction(\"dl\"), dt = createHtmlElementFunction(\"dt\"),\r\n    em = createHtmlElementFunction(\"em\"), embed = createHtmlElementFunction(\"embed\"), eventsource = createHtmlElementFunction(\"eventsource\"), fieldset = createHtmlElementFunction(\"fieldset\"), figcaption = createHtmlElementFunction(\"figcaption\"), figure = createHtmlElementFunction(\"figure\"), font = createHtmlElementFunction(\"font\"), footer = createHtmlElementFunction(\"footer\"), form = createHtmlElementFunction(\"form\"), frame = createHtmlElementFunction(\"frame\"), frameset = createHtmlElementFunction(\"frameset\"),\r\n    h1 = createHtmlElementFunction(\"h1\"), h2 = createHtmlElementFunction(\"h2\"), h3 = createHtmlElementFunction(\"h3\"), h4 = createHtmlElementFunction(\"h4\"), h5 = createHtmlElementFunction(\"h5\"), h6 = createHtmlElementFunction(\"h6\"), head = createHtmlElementFunction(\"head\"), header = createHtmlElementFunction(\"header\"), hgroup = createHtmlElementFunction(\"hgroup\"), hr = createHtmlElementFunction(\"hr\"),\r\n    i = createHtmlElementFunction(\"i\"), iframe = createHtmlElementFunction(\"iframe\"), img = createHtmlElementFunction(\"img\"), input = createHtmlElementFunction(\"input\"), ins = createHtmlElementFunction(\"ins\"), isindex = createHtmlElementFunction(\"isindex\"),\r\n    kbd = createHtmlElementFunction(\"kbd\"), keygen = createHtmlElementFunction(\"keygen\"),\r\n    label = createHtmlElementFunction(\"label\"), legend = createHtmlElementFunction(\"legend\"), li = createHtmlElementFunction(\"li\"), link = createHtmlElementFunction(\"link\"),\r\n    map = createHtmlElementFunction(\"map\"), mark = createHtmlElementFunction(\"mark\"), menu = createHtmlElementFunction(\"menu\"), meta = createHtmlElementFunction(\"meta\"),\r\n    meter = createHtmlElementFunction(\"meter\"), nav = createHtmlElementFunction(\"nav\"),\r\n    noframes = createHtmlElementFunction(\"noframes\"), noscript = createHtmlElementFunction(\"noscript\"), ol = createHtmlElementFunction(\"ol\"), optgroup = createHtmlElementFunction(\"optgroup\"), option = createHtmlElementFunction(\"option\"), output = createHtmlElementFunction(\"output\"),\r\n    p = createHtmlElementFunction(\"p\"), param = createHtmlElementFunction(\"param\"), pre = createHtmlElementFunction(\"pre\"), progress = createHtmlElementFunction(\"progress\"),\r\n    q = createHtmlElementFunction(\"q\"),\r\n    rp = createHtmlElementFunction(\"rp\"), rt = createHtmlElementFunction(\"rt\"), ruby = createHtmlElementFunction(\"ruby\"),\r\n    s = createHtmlElementFunction(\"s\"), samp = createHtmlElementFunction(\"samp\"), script = createHtmlElementFunction(\"script\"), section = createHtmlElementFunction(\"section\"), select = createHtmlElementFunction(\"select\"), small = createHtmlElementFunction(\"small\"), source = createHtmlElementFunction(\"source\"), span = createHtmlElementFunction(\"span\"), strike = createHtmlElementFunction(\"strike\"), strong = createHtmlElementFunction(\"strong\"), style = createHtmlElementFunction(\"style\"), sub = createHtmlElementFunction(\"sub\"), sup = createHtmlElementFunction(\"sup\"),\r\n    table = createHtmlElementFunction(\"table\"), tbody = createHtmlElementFunction(\"tbody\"), td = createHtmlElementFunction(\"td\"), textarea = createHtmlElementFunction(\"textarea\"), tfoot = createHtmlElementFunction(\"tfoot\"), th = createHtmlElementFunction(\"th\"), thead = createHtmlElementFunction(\"thead\"), time = createHtmlElementFunction(\"time\"), title = createHtmlElementFunction(\"title\"), tr = createHtmlElementFunction(\"tr\"), track = createHtmlElementFunction(\"track\"), tt = createHtmlElementFunction(\"tt\"),\r\n    u = createHtmlElementFunction(\"u\"), ul = createHtmlElementFunction(\"ul\"),\r\n    video = createHtmlElementFunction(\"video\"),\r\n    wbr = createHtmlElementFunction(\"wbr\");\r\n\r\n\r\n\r\n/**\r\n * Tạo đối tượng dom\r\n * @param {string|object} selector\r\n * @param {string|Element|string[]|Element[]} children\r\n * @param {object} attributes\r\n * @returns {DomFactory}\r\n * @note {string} Đoạn này thật ra không cần thiết. nhưng viết bào để trình soạn thảo sử dụng gợi ỳ\r\n */\r\n\r\n\r\nvar Html = function (): HTMLFactory {\r\n    var $class: any = _class(\"Html\").extends(Dom)({\r\n        const$isHtml: true,\r\n        __call(...args: any[]) {\r\n            return createEl(...args);\r\n        }\r\n    });\r\n    return $class\r\n}();\r\n\r\nHtml.static({\r\n    A: A, Abbr: Abbr, Acronym: Acronym, Address: Address, Applet: Applet, Area: Area, Article: Article, Aside: Aside, Audio: Audio, \r\n    B: B, Base: Base, Basefont: Basefont, Bb: Bb, Bdo: Bdo, Big: Big, Blockquote: Blockquote, Body: Body, Br: Br, Button: Button, \r\n    Canvas: Canvas, Caption: Caption, Center: Center, Cite: Cite, Code: Code, Col: Col, Colgroup: Colgroup, Command: Command, \r\n    Datagrid: Datagrid, Datalist: Datalist, Dd: Dd, Del: Del, Details: Details, Dfn: Dfn, Dialog: Dialog, Dir: Dir, Div: Div, Dl: Dl, Dt: Dt, \r\n    Em: Em, Embed: Embed, Eventsource: Eventsource, Fieldset: Fieldset, Figcaption: Figcaption, Figure: Figure, Font: Font, Footer: Footer, Form: Form, Frame: Frame, Frameset: Frameset, \r\n    H1: H1, H2: H2, H3: H3, H4: H4, H5: H5, H6: H6, Head: Head, Header: Header, Hgroup: Hgroup, Hr: Hr, \r\n    I: I, Iframe: Iframe, Img: Img, Input: Input, Ins: Ins, Isindex: Isindex, \r\n    Kbd: Kbd, Keygen: Keygen, \r\n    Label: Label, Legend: Legend, Li: Li, Link: Link, \r\n    Map: Map, Mark: Mark, Menu: Menu, Meta: Meta, Meter: Meter, \r\n    Nav: Nav, Noframes: Noframes, Noscript: Noscript, \r\n    Ol: Ol, Optgroup: Optgroup, Option: Option, Output: Output, \r\n    P: P, Param: Param, Pre: Pre, Progress: Progress, \r\n    Q: Q, Rp: Rp, Rt: Rt, Ruby: Ruby, \r\n    S: S, Samp: Samp, Script: Script, Section: Section, Select: Select, Small: Small, Source: Source, Span: Span, Strike: Strike, Strong: Strong, Style: Style, Sub: Sub, Sup: Sup, \r\n    Table: Table, Tbody: Tbody, Td: Td, Textarea: Textarea, Tfoot: Tfoot, Th: Th, Thead: Thead, Time: Time, Title: Title, Tr: Tr, Track: Track, Tt: Tt, \r\n    U: U, Ul: Ul, \r\n    Video: Video, Wbr: Wbr,\r\n    a: a, abbr: abbr, acronym: acronym, address: address, applet: applet, area: area, article: article, aside: aside, audio: audio,\r\n    b: b, base: base, basefont: basefont, bb: bb, bdo: bdo, big: big, blockquote: blockquote, body: body, br: br, button: button,\r\n    canvas: canvas, caption: caption, center: center, cite: cite, code: code, col: col, colgroup: colgroup, command: command,\r\n    datagrid: datagrid, datalist: datalist, dd: dd, del: del, details: details, dfn: dfn, dialog: dialog, dir: dir, div: div, dl: dl, dt: dt,\r\n    em: em, embed: embed, eventsource: eventsource, fieldset: fieldset, figcaption: figcaption, figure: figure, font: font, footer: footer, form: form, frame: frame, frameset: frameset,\r\n    h1: h1, h2: h2, h3: h3, h4: h4, h5: h5, h6: h6, head: head, header: header, hgroup: hgroup, hr: hr,\r\n    i: i, iframe: iframe, img: img, input: input, ins: ins, isindex: isindex,\r\n    kbd: kbd, keygen: keygen,\r\n    label: label, legend: legend, li: li, link: link,\r\n    map: map, mark: mark, menu: menu, meta: meta,\r\n    meter: meter, nav: nav,\r\n    noframes: noframes, noscript: noscript, ol: ol, optgroup: optgroup, option: option, output: output,\r\n    p: p, param: param, pre: pre, progress: progress,\r\n    q: q,\r\n    rp: rp, rt: rt, ruby: ruby,\r\n    s: s, samp: samp, script: script, section: section, select: select, small: small, source: source, span: span, strike: strike, strong: strong, style: style, sub: sub, sup: sup,\r\n    table: table, tbody: tbody, td: td, textarea: textarea, tfoot: tfoot, th: th, thead: thead, time: time, title: title, tr: tr, track: track, tt: tt,\r\n    u: u, ul: ul,\r\n    video: video,\r\n    wbr: wbr,\r\n\r\n});\r\n\r\n\r\nexport default Html;\r\nexport {\r\n    createElementClass,\r\n    Html,\r\n    A, Abbr, Acronym, Address, Applet, Area, Article, Aside, Audio,\r\n    B, Base, Basefont, Bb, Bdo, Big, Blockquote, Body, Br, Button,\r\n    Canvas, Caption, Center, Cite, Code, Col, Colgroup, Command,\r\n    Datagrid, Datalist, Dd, Del, Details, Dfn, Dialog, Dir, Div, Dl, Dt,\r\n    Em, Embed, Eventsource,\r\n    Fieldset, Figcaption, Figure, Font, Footer, Form, Frame, Frameset,\r\n    H1, H2, H3, H4, H5, H6, Head, Header, Hgroup, Hr,\r\n    I, Iframe, Img, Input, Ins, Isindex,\r\n    Kbd, Keygen,\r\n    Label, Legend, Li, Link,\r\n    Map, Mark, Menu, Meta, Meter,\r\n    Nav, Noframes, Noscript,\r\n    Ol, Optgroup, Option, Output,\r\n    P, Param, Pre, Progress,\r\n    Q,\r\n    Rp, Rt, Ruby,\r\n    S, Samp, Script, Section, Select, Small, Source, Span, Strike, Strong, Style, Sub, Sup,\r\n    Table, Tbody, Td, Textarea, Tfoot, Th, Thead, Time, Title, Tr, Track, Tt,\r\n    U, Ul,\r\n    Video, Wbr,\r\n    a, abbr, acronym, address, applet, area, article, aside, audio,\r\n    b, base, basefont, bb, bdo, big, blockquote, body, br, button,\r\n    canvas, caption, center, cite, code, col, colgroup, command,\r\n    datagrid, datalist, dd, del, details, dfn, dialog, dir, div, dl, dt,\r\n    em, embed, eventsource,\r\n    fieldset, figcaption, figure, font, footer, form, frame, frameset,\r\n    h1, h2, h3, h4, h5, h6, head, header, hgroup, hr,\r\n    i, iframe, img, input, ins, isindex, kbd, keygen,\r\n    label, legend, li, link,\r\n    map, mark, menu, meta, meter,\r\n    nav, noframes, noscript,\r\n    ol, optgroup, option, output,\r\n    p, param, pre, progress,\r\n    q,\r\n    rp, rt, ruby,\r\n    s, samp, script, section, select, small, source, span, strike, strong, style, sub, sup,\r\n    table, tbody, td, textarea, tfoot, th, thead, time, title, tr, track, tt,\r\n    u, ul,\r\n    video,\r\n    wbr\r\n};"],"sourceRoot":"webpack:///"}