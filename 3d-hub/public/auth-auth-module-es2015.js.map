{"version":3,"sources":["./src/app/auth/store/auth.actions.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/store/index.ts","./src/app/auth/layout/layout.component.ts","./src/app/auth/layout/layout.component.html","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/store/auth.effects.ts","./src/app/auth/store/auth.selectors.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/store/auth.reducer.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { Action } from '@ngrx/store';\r\n\r\nexport enum AuthActionTypes {\r\n  LOGIN = '[Auth] Login',\r\n  LOGIN_SUCCESS = '[Auth] Login Success',\r\n  LOGIN_FAILURE = '[Auth] Login Failure',\r\n}\r\n\r\nexport class Login implements Action {\r\n  readonly type = AuthActionTypes.LOGIN;\r\n  constructor(public payload: { email: string; password: string }) {}\r\n}\r\nexport class LoginSuccess implements Action {\r\n  readonly type = AuthActionTypes.LOGIN_SUCCESS;\r\n  constructor(public payload: any) {}\r\n}\r\nexport class LoginFailure implements Action {\r\n  readonly type = AuthActionTypes.LOGIN_FAILURE;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport type AuthActions = Login | LoginSuccess | LoginFailure;\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UnAuthGuard } from '../_core/guards';\r\nimport { LayoutAuthComponent } from './layout/layout.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutAuthComponent,\r\n    canActivate: [UnAuthGuard],\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const COMPONENTS = [LoginComponent, LayoutAuthComponent];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","export * from './auth.actions';\r\nexport * from './auth.effects';\r\nexport * from './auth.reducer';\r\nexport * from './auth.selectors';\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout-auth',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n})\r\nexport class LayoutAuthComponent {}\r\n","<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss'],\r\n})\r\nexport class AuthComponent {}\r\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { map, switchMap, catchError, tap } from 'rxjs/operators';\r\nimport * as authActions from './auth.actions';\r\nimport { AuthenticationService } from '../services';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { SettingService } from '@app/_core/services/setting/setting.service';\r\n\r\nconst { AuthActionTypes } = authActions;\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  constructor(\r\n    private actions$: Actions<authActions.AuthActions>,\r\n    private authenticationService: AuthenticationService,\r\n    private settingService: SettingService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  @Effect()\r\n  login$: Observable<any> = this.actions$.pipe(\r\n    ofType(AuthActionTypes.LOGIN),\r\n    map((action: authActions.Login) => action.payload),\r\n    switchMap((payload) => {\r\n      return this.authenticationService.login(payload.email, payload.password).pipe(\r\n        map((user) => new authActions.LoginSuccess(user)),\r\n        catchError((error) => {\r\n          return of(new authActions.LoginFailure({ error }));\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  loginSuccess$: Observable<any> = this.actions$.pipe(\r\n    ofType(AuthActionTypes.LOGIN_SUCCESS),\r\n    tap((res) => {\r\n      this.settingService.setUser(res.payload);\r\n      this.router.navigate(['p/teams']);\r\n    })\r\n  );\r\n}\r\n","import * as fromAuth from './auth.reducer';\r\nimport { createSelector } from '@ngrx/store';\r\n\r\nexport const getIsAuthenticating = createSelector(fromAuth.selectAuthState, (state: fromAuth.AuthState) => state.isAuthenticating);\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule, COMPONENTS } from './auth-routing.module';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { reducer, AuthEffects } from './store';\r\n\r\nimport { AuthComponent } from './auth.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { AppUIModule } from '../app-ui.module';\r\n\r\n@NgModule({\r\n  declarations: [AuthComponent, ...COMPONENTS],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    SharedModule,\r\n    AppUIModule,\r\n    EffectsModule.forFeature([AuthEffects]),\r\n    StoreModule.forFeature('authStore', reducer),\r\n  ],\r\n  providers: [],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromAuth from '../store';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  error = false;\r\n  isAuthenticating$: Observable<boolean>;\r\n  constructor(private store: Store<fromAuth.AuthState>, private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      remember: [false, Validators.required],\r\n    });\r\n\r\n    this.isAuthenticating$ = this.store.select(fromAuth.getIsAuthenticating);\r\n  }\r\n\r\n  get f(): any {\r\n    if (typeof this.loginForm !== 'undefined') {\r\n      return this.loginForm.controls;\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (this.loginForm.valid) {\r\n      const actionPayload = {\r\n        email: this.f.email.value,\r\n        password: this.f.password.value,\r\n      };\r\n      this.store.dispatch(new fromAuth.Login(actionPayload));\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-wrapper\">\r\n  <form nz-form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" role=\"form\">\r\n    <section class=\"title\">\r\n      Brandgos\r\n      <h5 class=\"hint\">Make your logo</h5>\r\n    </section>\r\n    <div class=\"login-group\">\r\n      <nz-alert *ngIf=\"error\" [nzType]=\"'error'\" [nzMessage]=\"error\" [nzShowIcon]=\"true\" class=\"mb-lg\"></nz-alert>\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <nz-input-group nzSize=\"large\" nzPrefixIcon=\"user\">\r\n            <input nz-input formControlName=\"email\" placeholder=\"Email\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <nz-input-group nzSize=\"large\" nzPrefixIcon=\"lock\">\r\n            <input nz-input type=\"password\" formControlName=\"password\" placeholder=\"Password\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <!-- <nz-col [nzSpan]=\"12\">\r\n        <label nz-checkbox formControlName=\"remember\">{{\r\n          'Remember me' | translate\r\n        }}</label>\r\n      </nz-col> -->\r\n        <!-- <nz-col [nzSpan]=\"12\" class=\"text-right\">\r\n        <a class=\"forgot\">{{ 'Forgot password' | translate }}</a>\r\n      </nz-col> -->\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <button nz-button type=\"submit\" nzType=\"primary\" nzSize=\"large\" [nzLoading]=\"isAuthenticating$ | async\" nzBlock>\r\n          {{ 'Login' }}\r\n        </button>\r\n      </nz-form-item>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { AuthActions, AuthActionTypes } from './auth.actions';\r\nimport { User } from './../models/user';\r\nimport { createFeatureSelector, createReducer, on } from '@ngrx/store';\r\n\r\nexport interface AuthState {\r\n  user: User | null;\r\n  errorMessage: string | null;\r\n  isAuthenticating: boolean;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nexport const initialState: AuthState = {\r\n  user: null,\r\n  errorMessage: null,\r\n  isAuthenticating: false,\r\n  isAuthenticated: false,\r\n};\r\n\r\nexport function reducer(state = initialState, action: AuthActions): AuthState {\r\n  switch (action.type) {\r\n    case AuthActionTypes.LOGIN:\r\n      return {\r\n        ...state,\r\n        isAuthenticating: true,\r\n        errorMessage: null,\r\n        isAuthenticated: false,\r\n      };\r\n    case AuthActionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        isAuthenticated: true,\r\n        isAuthenticating: false,\r\n        user: {\r\n          accessToken: action.payload.accessToken,\r\n          id: action.payload.id,\r\n          email: action.payload.email,\r\n          username: action.payload.username,\r\n        },\r\n      };\r\n\r\n    case AuthActionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload.error,\r\n        isAuthenticating: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const selectAuthState = createFeatureSelector<AuthState>('authStore');\r\n"],"sourceRoot":"webpack:///"}