{"version":3,"sources":["webpack:///src/app/auth/store/auth.actions.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/store/index.ts","webpack:///src/app/auth/layout/layout.component.ts","webpack:///src/app/auth/layout/layout.component.html","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/store/auth.effects.ts","webpack:///src/app/auth/store/auth.selectors.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/store/auth.reducer.ts"],"names":["AuthActionTypes","Login","payload","type","LOGIN","LoginSuccess","LOGIN_SUCCESS","LoginFailure","LOGIN_FAILURE","routes","path","component","canActivate","children","COMPONENTS","AuthRoutingModule","forChild","LayoutAuthComponent","AuthComponent","AuthEffects","actions$","authenticationService","settingService","router","login$","pipe","action","login","email","password","user","error","loginSuccess$","res","setUser","navigate","dispatch","getIsAuthenticating","state","isAuthenticating","AuthModule","forFeature","LoginComponent","store","formBuilder","submitted","loginForm","group","required","remember","isAuthenticating$","select","controls","valid","actionPayload","f","value","onSubmit","initialState","errorMessage","isAuthenticated","reducer","accessToken","id","username","selectAuthState"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { Action } from '@ngrx/store';\r\n\r\nexport enum AuthActionTypes {\r\n  LOGIN = '[Auth] Login',\r\n  LOGIN_SUCCESS = '[Auth] Login Success',\r\n  LOGIN_FAILURE = '[Auth] Login Failure',\r\n}\r\n\r\nexport class Login implements Action {\r\n  readonly type = AuthActionTypes.LOGIN;\r\n  constructor(public payload: { email: string; password: string }) {}\r\n}\r\nexport class LoginSuccess implements Action {\r\n  readonly type = AuthActionTypes.LOGIN_SUCCESS;\r\n  constructor(public payload: any) {}\r\n}\r\nexport class LoginFailure implements Action {\r\n  readonly type = AuthActionTypes.LOGIN_FAILURE;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport type AuthActions = Login | LoginSuccess | LoginFailure;\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UnAuthGuard } from '../_core/guards';\r\nimport { LayoutAuthComponent } from './layout/layout.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutAuthComponent,\r\n    canActivate: [UnAuthGuard],\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const COMPONENTS = [LoginComponent, LayoutAuthComponent];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","export * from './auth.actions';\r\nexport * from './auth.effects';\r\nexport * from './auth.reducer';\r\nexport * from './auth.selectors';\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout-auth',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss'],\r\n})\r\nexport class LayoutAuthComponent {}\r\n","<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss'],\r\n})\r\nexport class AuthComponent {}\r\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { map, switchMap, catchError, tap } from 'rxjs/operators';\r\nimport * as authActions from './auth.actions';\r\nimport { AuthenticationService } from '../services';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { SettingService } from '@app/_core/services/setting/setting.service';\r\n\r\nconst { AuthActionTypes } = authActions;\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  constructor(\r\n    private actions$: Actions<authActions.AuthActions>,\r\n    private authenticationService: AuthenticationService,\r\n    private settingService: SettingService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  @Effect()\r\n  login$: Observable<any> = this.actions$.pipe(\r\n    ofType(AuthActionTypes.LOGIN),\r\n    map((action: authActions.Login) => action.payload),\r\n    switchMap((payload) => {\r\n      return this.authenticationService.login(payload.email, payload.password).pipe(\r\n        map((user) => new authActions.LoginSuccess(user)),\r\n        catchError((error) => {\r\n          return of(new authActions.LoginFailure({ error }));\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\n  @Effect({ dispatch: false })\r\n  loginSuccess$: Observable<any> = this.actions$.pipe(\r\n    ofType(AuthActionTypes.LOGIN_SUCCESS),\r\n    tap((res) => {\r\n      this.settingService.setUser(res.payload);\r\n      this.router.navigate(['p/teams']);\r\n    })\r\n  );\r\n}\r\n","import * as fromAuth from './auth.reducer';\r\nimport { createSelector } from '@ngrx/store';\r\n\r\nexport const getIsAuthenticating = createSelector(fromAuth.selectAuthState, (state: fromAuth.AuthState) => state.isAuthenticating);\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule, COMPONENTS } from './auth-routing.module';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { reducer, AuthEffects } from './store';\r\n\r\nimport { AuthComponent } from './auth.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { AppUIModule } from '../app-ui.module';\r\n\r\n@NgModule({\r\n  declarations: [AuthComponent, ...COMPONENTS],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    SharedModule,\r\n    AppUIModule,\r\n    EffectsModule.forFeature([AuthEffects]),\r\n    StoreModule.forFeature('authStore', reducer),\r\n  ],\r\n  providers: [],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromAuth from '../store';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  error = false;\r\n  isAuthenticating$: Observable<boolean>;\r\n  constructor(private store: Store<fromAuth.AuthState>, private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      remember: [false, Validators.required],\r\n    });\r\n\r\n    this.isAuthenticating$ = this.store.select(fromAuth.getIsAuthenticating);\r\n  }\r\n\r\n  get f(): any {\r\n    if (typeof this.loginForm !== 'undefined') {\r\n      return this.loginForm.controls;\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (this.loginForm.valid) {\r\n      const actionPayload = {\r\n        email: this.f.email.value,\r\n        password: this.f.password.value,\r\n      };\r\n      this.store.dispatch(new fromAuth.Login(actionPayload));\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-wrapper\">\r\n  <form nz-form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" role=\"form\">\r\n    <section class=\"title\">\r\n      Brandgos\r\n      <h5 class=\"hint\">Make your logo</h5>\r\n    </section>\r\n    <div class=\"login-group\">\r\n      <nz-alert *ngIf=\"error\" [nzType]=\"'error'\" [nzMessage]=\"error\" [nzShowIcon]=\"true\" class=\"mb-lg\"></nz-alert>\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <nz-input-group nzSize=\"large\" nzPrefixIcon=\"user\">\r\n            <input nz-input formControlName=\"email\" placeholder=\"Email\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n\r\n      <nz-form-item>\r\n        <nz-form-control>\r\n          <nz-input-group nzSize=\"large\" nzPrefixIcon=\"lock\">\r\n            <input nz-input type=\"password\" formControlName=\"password\" placeholder=\"Password\" />\r\n          </nz-input-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <!-- <nz-col [nzSpan]=\"12\">\r\n        <label nz-checkbox formControlName=\"remember\">{{\r\n          'Remember me' | translate\r\n        }}</label>\r\n      </nz-col> -->\r\n        <!-- <nz-col [nzSpan]=\"12\" class=\"text-right\">\r\n        <a class=\"forgot\">{{ 'Forgot password' | translate }}</a>\r\n      </nz-col> -->\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <button nz-button type=\"submit\" nzType=\"primary\" nzSize=\"large\" [nzLoading]=\"isAuthenticating$ | async\" nzBlock>\r\n          {{ 'Login' }}\r\n        </button>\r\n      </nz-form-item>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { AuthActions, AuthActionTypes } from './auth.actions';\r\nimport { User } from './../models/user';\r\nimport { createFeatureSelector, createReducer, on } from '@ngrx/store';\r\n\r\nexport interface AuthState {\r\n  user: User | null;\r\n  errorMessage: string | null;\r\n  isAuthenticating: boolean;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nexport const initialState: AuthState = {\r\n  user: null,\r\n  errorMessage: null,\r\n  isAuthenticating: false,\r\n  isAuthenticated: false,\r\n};\r\n\r\nexport function reducer(state = initialState, action: AuthActions): AuthState {\r\n  switch (action.type) {\r\n    case AuthActionTypes.LOGIN:\r\n      return {\r\n        ...state,\r\n        isAuthenticating: true,\r\n        errorMessage: null,\r\n        isAuthenticated: false,\r\n      };\r\n    case AuthActionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        isAuthenticated: true,\r\n        isAuthenticating: false,\r\n        user: {\r\n          accessToken: action.payload.accessToken,\r\n          id: action.payload.id,\r\n          email: action.payload.email,\r\n          username: action.payload.username,\r\n        },\r\n      };\r\n\r\n    case AuthActionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload.error,\r\n        isAuthenticating: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const selectAuthState = createFeatureSelector<AuthState>('authStore');\r\n"]}